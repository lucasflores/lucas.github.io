{"version":3,"file":"component---src-templates-blog-list-js-011699d3db0e29064dad.js","mappings":"iNAMmC,IAE7BA,EAAS,8DA4IZ,OA5IY,wBACbC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAAYH,EAAKI,KAAKC,aAAaC,MAEnCC,EAAQP,EAAKQ,OAAOC,OACpB,YAAEC,EAAW,SAAEC,GAAaV,KAAKC,MAAMU,YACvCC,EAA0B,IAAhBH,EACVI,EAASJ,IAAgBC,EACzBI,EAAWL,EAAc,GAAM,EAAI,IAAG,OAASA,EAAc,GAC7DM,EAAQ,OAASN,EAAc,GAgDrC,OACE,gBAAC,IAAa,KACZ,gBAAC,IAAG,CACFJ,MAAOH,EACPc,SAAU,CAAC,OAAD,iCAEZ,uBAAKC,UAAU,wBAGZX,EAAMY,KAAI,IAAe,IAAd,KAAEC,GAAM,EAClB,OACE,2BAASF,UAAU,OAAOG,IAAKD,EAAKE,OAAOC,MACxCH,EAAKI,YAAYC,KAChBL,EAAKI,YAAYC,IAAIC,iBACrBN,EAAKI,YAAYC,IAAIC,gBAAgBC,iBACnC,gBAAC,EAAAC,KAAI,CAACC,GAAIT,EAAKE,OAAOC,KAAML,UAAU,kBACpC,gBAAC,EAAAY,EAAW,CACVC,MACEX,EAAKI,YAAYQ,SAASN,gBAAgBC,gBAE5CT,UAAU,aACVG,IACED,EAAKI,YAAYC,IAAIC,gBAAgBC,gBAClCM,IAELC,IAAI,MAIZ,uBAAKhB,UAAU,gBACb,sBAAIA,UAAU,cACZ,gBAAC,EAAAU,KAAI,CAACC,GAAIT,EAAKE,OAAOC,MAAOH,EAAKI,YAAYlB,QAEhD,yBAAIc,EAAKe,SACT,wBAAMjB,UAAU,aACbE,EAAKI,YAAYY,KAAK,QAEzB,wBAAMlB,UAAU,cACXE,EAAKE,OAAOe,WAAWC,MAE5B,wBAAMpB,UAAU,YACbE,EAAKI,YAAYe,MAChBnB,EAAKI,YAAYe,KAAKpB,KAAKqB,GACzB,wBAAMnB,IAAKmB,GACT,gBAAC,EAAAZ,KAAI,CAACV,UAAU,MAAMW,GAAE,SAAW,IAAUW,GAAI,KAC9CA,QAML,IAGd,uBAAKtB,UAAU,aACb,uBAAKA,UAAU,aAAauB,KAAK,cAC/B,2BACI5B,GACA,yBACE,gBAAC,EAAAe,KAAI,CAACC,GAAId,EAAU2B,IAAI,OAAOxB,UAAU,eAAc,oBAK3D,yBACE,wBAAMA,UAAU,eAAc,QACtBR,EAAY,OAAKC,KAGzBG,GACA,yBACE,gBAAC,EAAAc,KAAI,CAACC,GAAIb,EAAU0B,IAAI,OAAOxB,UAAU,eAAc,oBAWzE,EAAC,EA5IY,CAASyB,EAAAA,WA+IxB,W","sources":["webpack://flexible-gatsby/./src/templates/blog-list.js"],"sourcesContent":["import React, { useReact, useState } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { kebabCase } from 'lodash'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport DefaultLayout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    //const allPosts = data.allMdx.edges\n    const posts = data.allMdx.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : `../${currentPage - 1}`\n    const nextPage = `../${currentPage + 1}`\n\n    //----\n//    const emptyQuery = \"\"\n//    const [state, setState] = useState({\n//        filteredData: [],\n//        query: emptyQuery,\n//    })\n//    const handleInputChange = event => {\n//    console.log(event.target.value)\n//    const query = event.target.value\n//    const { data } = this.props\n//\n//    const posts = data.allMdx.edges || []\n//\n//    const filteredData = posts.filter(post => {\n//      const { description, title, tags } = post.node.frontmatter\n//      return (\n//        description.toLowerCase().includes(query.toLowerCase()) ||\n//        title.toLowerCase().includes(query.toLowerCase()) ||\n//        (tags &&\n//          tags\n//            .join(\"\")\n//            .toLowerCase()\n//            .includes(query.toLowerCase()))\n//      )\n//    })\n//\n//    setState({\n//      query,\n//      filteredData,\n//    })\n//    }\n//\n//    const { filteredData, query } = state\n//    const hasSearchResults = filteredData && query !== emptyQuery\n//    const posts = hasSearchResults ? filteredData : allPosts\n       // <div className=\"searchBox\">\n       //   <input\n       //     className=\"searchInput\"\n       //    type=\"text\"\n       //     aria-label=\"Search\"\n       //     placeholder=\"Type to filter posts...\"\n       //     onChange={handleInputChange}\n       //    />\n       //  </div>\n    //----\n\n    return (\n      <DefaultLayout>\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <div className=\"content-box clearfix\">\n\n\n          {posts.map(({ node }) => {\n            return (\n              <article className=\"post\" key={node.fields.slug}>\n                {node.frontmatter.img &&\n                  node.frontmatter.img.childImageSharp &&\n                  node.frontmatter.img.childImageSharp.gatsbyImageData && (\n                    <Link to={node.fields.slug} className=\"post-thumbnail\">\n                      <GatsbyImage\n                        image={\n                          node.frontmatter.thumbimg.childImageSharp.gatsbyImageData\n                        }\n                        className=\"page-image\"\n                        key={\n                          node.frontmatter.img.childImageSharp.gatsbyImageData\n                            .src\n                        }\n                        alt=\"\"\n                      />\n                    </Link>\n                  )}\n                <div className=\"post-content\">\n                  <h2 className=\"post-title\">\n                    <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                  </h2>\n                  <p>{node.excerpt}</p>\n                  <span className=\"post-date\">\n                    {node.frontmatter.date}&nbsp;&nbsp;—&nbsp;\n                  </span>\n                  <span className=\"post-words\">\n                      {node.fields.timeToRead.text}\n                  </span>\n                  <span className=\"page-tag\">\n                    {node.frontmatter.tags &&\n                      node.frontmatter.tags.map((tag) => (\n                        <span key={tag}>\n                          <Link className=\"tag\" to={`/tags/${kebabCase(tag)}/`}>\n                            {tag}\n                          </Link>\n                        </span>\n                      ))}\n                  </span>\n                </div>\n              </article>\n            )\n          })}\n          <div className=\"container\">\n            <nav className=\"pagination\" role=\"navigation\">\n              <ul>\n                {!isFirst && (\n                  <p>\n                    <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\n                      ← Previous Page\n                    </Link>\n                  </p>\n                )}\n                <p>\n                  <span className=\"page-number\">\n                    Page {currentPage} of {numPages}\n                  </span>\n                </p>\n                {!isLast && (\n                  <p>\n                    <Link to={nextPage} rel=\"next\" className=\"older-posts\">\n                      Next Page →\n                    </Link>\n                  </p>\n                )}\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </DefaultLayout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: {frontmatter: {date: DESC}}\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          fields {\n            slug\n            timeToRead { \n              minutes\n              text\n              time\n              words\n            }\n          }\n          frontmatter {\n            date(formatString: \"YYYY, MMM DD\")\n            title\n            tags\n            thumbimg {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: BLURRED\n                  layout: FULL_WIDTH\n                  formats: [AUTO, AVIF, WEBP]\n                  transformOptions: {fit: FILL, cropFocus: ATTENTION} \n                )\n              }\n            }\n            img {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: BLURRED\n                  layout: FULL_WIDTH\n                  formats: [AUTO, AVIF, WEBP]\n                  transformOptions: {fit: FILL, cropFocus: ATTENTION} \n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMdx","edges","currentPage","numPages","pageContext","isFirst","isLast","prevPage","nextPage","keywords","className","map","node","key","fields","slug","frontmatter","img","childImageSharp","gatsbyImageData","Link","to","G","image","thumbimg","src","alt","excerpt","date","timeToRead","text","tags","tag","role","rel","React"],"sourceRoot":""}