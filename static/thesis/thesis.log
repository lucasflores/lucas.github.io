This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2021) (preloaded format=latex 2021.8.28)  10 APR 2022 13:00
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**\makeatletter\def\HCode{\futurelet\HCode\HChar}\def\HChar{\ifx"\HCode\def\HCo
de"##1"{\Link##1}\expandafter\HCode\else\expandafter\Link\fi}\def\Link#1.a.b.c.
{\g@addto@macro\@documentclasshook{\RequirePackage[#1,html]{tex4ht}}\let\HCode\
documentstyle\def\documentstyle{\let\documentstyle\HCode\expandafter\def\csname
 tex4ht\endcsname{#1,html}\def\HCode####1{\documentstyle[tex4ht,}\@ifnextchar[{
\HCode}{\documentstyle[tex4ht]}}}\makeatother\HCode MyConfig,mathjax,fn-in,p-wi
dth,charset=utf-8,html5.a.b.c.\input "\detokenize{thesis.tex}"
(./thesis.tex (./style/pennThesis.cls

LaTeX Warning: You have requested document class `style/pennThesis',
               but the document class provides `pennThesis'.

Document Class: pennThesis 11/04/20222011 UPenn HEP Thesis Class
(/usr/local/texlive/2021/texmf-dist/tex/latex/memoir/memoir.cls
Document Class: memoir 2021/03/23 v3.7o configurable book, report, article docu
ment class
\onelineskip=\skip47
\lxvchars=\skip48
\xlvchars=\skip49
\@memcnta=\count179
\c@@memmarkcntra=\count180
(/usr/local/texlive/2021/texmf-dist/tex/generic/iftex/iftex.sty
Package: iftex 2020/03/06 v1.0d TeX engine tests
)
\stockheight=\skip50
\stockwidth=\skip51
\trimtop=\skip52
\trimedge=\skip53
(/usr/local/texlive/2021/texmf-dist/tex/latex/memoir/mem10.clo
File: mem10.clo 2008/01/30 v0.3 memoir class 10pt size option
)
\binding=\skip54
\spinemargin=\skip55
\foremargin=\skip56
\uppermargin=\skip57
\lowermargin=\skip58
\headdrop=\skip59
\normalrulethickness=\skip60
\mem@maxheadheight=\skip61
\mem@maxfootheight=\skip62
\headwidth=\skip63
\c@storedpagenumber=\count181
\memPD=\dimen138
\m@mabparskip=\skip64
\thanksmarkwidth=\skip65
\thanksmarksep=\skip66
\droptitle=\skip67
\c@book=\count182
\c@part=\count183
\c@chapter=\count184
\c@section=\count185
\c@subsection=\count186
\c@subsubsection=\count187
\c@paragraph=\count188
\c@subparagraph=\count189
\beforechapskip=\skip68
\midchapskip=\skip69
\afterchapskip=\skip70
\chapindent=\skip71
\bottomsectionskip=\skip72
\secindent=\skip73
\beforesecskip=\skip74
\aftersecskip=\skip75
\subsecindent=\skip76
\beforesubsecskip=\skip77
\aftersubsecskip=\skip78
\subsubsecindent=\skip79
\beforesubsubsecskip=\skip80
\aftersubsubsecskip=\skip81
\paraindent=\skip82
\beforeparaskip=\skip83
\afterparaskip=\skip84
\subparaindent=\skip85
\beforesubparaskip=\skip86
\aftersubparaskip=\skip87
\pfbreakskip=\skip88
\c@@ppsavesec=\count190
\c@@ppsaveapp=\count191
\ragrparindent=\dimen139
\everylistparindent=\dimen140
\parsepi=\skip89
\topsepi=\skip90
\itemsepi=\skip91
\parsepii=\skip92
\topsepii=\skip93
\topsepiii=\skip94
\itemsepii=\skip95
\itemsepiii=\skip96
\partopsepii=\skip97
\partopsepiii=\skip98
\m@msavetopsep=\skip99
\m@msavepartopsep=\skip100
\@enLab=\toks15
\abstitleskip=\skip101
\absleftindent=\skip102
\abs@leftindent=\dimen141
\absrightindent=\skip103
\absparindent=\skip104
\absparsep=\skip105
\c@vslineno=\count192
\c@poemline=\count193
\c@modulo@vs=\count194
\c@memfvsline=\count195
\vleftskip=\skip106
\vrightskip=\skip107
\stanzaskip=\skip108
\versewidth=\skip109
\vgap=\skip110
\vindent=\skip111
\vleftmargin=\dimen142
\c@verse=\count196
\c@chrsinstr=\count197
\beforepoemtitleskip=\skip112
\afterpoemtitleskip=\skip113
\c@poem=\count198
\beforePoemTitleskip=\skip114
\midPoemTitleskip=\skip115
\afterPoemTitleskip=\skip116
(/usr/local/texlive/2021/texmf-dist/tex/latex/tools/array.sty
Package: array 2020/10/01 v2.5c Tabular extension package (FMi)
\col@sep=\dimen143
\ar@mcellbox=\box47
\extrarowheight=\dimen144
\NC@list=\toks16
\extratabsurround=\skip117
\backup@length=\skip118
\ar@cellbox=\box48
) (/usr/local/texlive/2021/texmf-dist/tex/latex/tools/dcolumn.sty
Package: dcolumn 2014/10/28 v1.06 decimal alignment package (DPC)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/tools/delarray.sty
Package: delarray 2014/10/28 v1.01 array delimiter package (DPC)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/tools/tabularx.sty
Package: tabularx 2020/01/15 v2.11c `tabularx' package (DPC)
\TX@col@width=\dimen145
\TX@old@table=\dimen146
\TX@old@col=\dimen147
\TX@target=\dimen148
\TX@delta=\dimen149
\TX@cols=\count199
\TX@ftn=\toks17
)
\heavyrulewidth=\dimen150
\lightrulewidth=\dimen151
\cmidrulewidth=\dimen152
\belowrulesep=\dimen153
\belowbottomsep=\dimen154
\aboverulesep=\dimen155
\abovetopsep=\dimen156
\cmidrulesep=\dimen157
\cmidrulekern=\dimen158
\defaultaddspace=\dimen159
\@cmidla=\count266
\@cmidlb=\count267
\@aboverulesep=\dimen160
\@belowrulesep=\dimen161
\@thisruleclass=\count268
\@lastruleclass=\count269
\@thisrulewidth=\dimen162
\ctableftskip=\skip119
\ctabrightskip=\skip120
\abovecolumnspenalty=\count270
\@linestogo=\count271
\@cellstogo=\count272
\@cellsincolumn=\count273
\crtok=\toks18
\@mincolumnwidth=\dimen163
\c@newflo@tctr=\count274
\mem@margin@floatbox=\box49
\@contcwidth=\skip121
\@contindw=\skip122
\abovecaptionskip=\skip123
\belowcaptionskip=\skip124
\subfloattopskip=\skip125
\subfloatcapskip=\skip126
\subfloatcaptopadj=\skip127
\subfloatbottomskip=\skip128
\subfloatlabelskip=\skip129
\subfloatcapmargin=\dimen164
\c@@contsubnum=\count275
\m@mscap@capbox=\box50
\m@mscap@fbox=\box51
\sidecapsep=\dimen165
\sidecapwidth=\dimen166
\m@m@tempdima=\dimen167
\m@mscapraise=\dimen168
\sidecapraise=\dimen169
\m@mscapmainwidth=\dimen170
\m@mscaplkern=\dimen171
\beforeepigraphskip=\skip130
\afterepigraphskip=\skip131
\epigraphwidth=\skip132
\epigraphrule=\skip133
LaTeX Info: Redefining \em on input line 7650.
LaTeX Info: Redefining \emph on input line 7658.
\tocentryskip=\skip134
\tocbaseline=\skip135
\cftparskip=\skip136
\cftbeforebookskip=\skip137
\cftbookindent=\dimen172
\cftbooknumwidth=\dimen173
\cftbeforepartskip=\skip138
\cftpartindent=\skip139
\cftpartnumwidth=\skip140
\cftbeforechapterskip=\skip141
\cftchapterindent=\skip142
\cftchapternumwidth=\skip143
\cftbeforesectionskip=\skip144
\cftsectionindent=\skip145
\cftsectionnumwidth=\skip146
\cftbeforesubsectionskip=\skip147
\cftsubsectionindent=\skip148
\cftsubsectionnumwidth=\skip149
\cftbeforesubsubsectionskip=\skip150
\cftsubsubsectionindent=\skip151
\cftsubsubsectionnumwidth=\skip152
\cftbeforeparagraphskip=\skip153
\cftparagraphindent=\skip154
\cftparagraphnumwidth=\skip155
\cftbeforesubparagraphskip=\skip156
\cftsubparagraphindent=\skip157
\cftsubparagraphnumwidth=\skip158
\prechapterprecisshift=\dimen174
\c@maxsecnumdepth=\count276
\bibindent=\dimen175
\bibitemsep=\skip159
\indexcolsep=\skip160
\indexrule=\skip161
\indexmarkstyle=\toks19
\@indexbox=\insert252
\glossarycolsep=\dimen176
\glossaryrule=\dimen177
\sideparvshift=\skip162
\sideins=\insert251
\sidebartopsep=\skip163
\sidebarhsep=\skip164
\sidebarvsep=\skip165
\sidebarwidth=\skip166
\footmarkwidth=\skip167
\footmarksep=\skip168
\footparindent=\skip169
\footinsdim=\skip170
\footinsv@r=\insert250
\@mpfootinsv@r=\insert249
\m@m@k=\count277
\m@m@h=\dimen178
\m@mipn@skip=\skip171
\sidefootins=\insert248
\sidefootadjust=\skip172
\sidefootheight=\skip173
\sidefoothsep=\skip174
\sidefootvsep=\skip175
\sidefootwidth=\skip176
\m@mdownsf=\skip177
\c@sidefootnote=\count278
\sidefootmarkwidth=\skip178
\sidefootmarksep=\skip179
\sidefootparindent=\skip180
\c@pagenote=\count279
\c@pagenoteshadow=\count280
\mem@pn@lastkern=\skip181
\every@verbatim=\toks20
\afterevery@verbatim=\toks21
\verbatim@line=\toks22
\tab@position=\count281
\verbatim@in@stream=\read2
\verbatimindent=\skip182
\verbatim@out=\write3
\bvboxsep=\skip183
\c@memfbvline=\count282
\c@bvlinectr=\count283
\bvnumlength=\skip184
\fb@frw=\dimen179
\fb@frh=\dimen180
\FrameRule=\dimen181
\FrameSep=\dimen182
\c@cp@cntr=\count284
\c@ism@mctr=\count285
\c@xsm@mctr=\count286
\c@csm@mctr=\count287
\c@ksm@mctr=\count288
\c@xksm@mctr=\count289
\c@cksm@mctr=\count290
\c@msm@mctr=\count291
\c@xmsm@mctr=\count292
\c@cmsm@mctr=\count293
\c@bsm@mctr=\count294
\c@workm@mctr=\count295
\c@sheetsequence=\count296
\c@lastsheet=\count297
\c@lastpage=\count298
(/usr/local/texlive/2021/texmf-dist/tex/latex/textcase/textcase.sty
Package: textcase 2019/09/14 v1.00 Text only upper/lower case changing (DPC)
)
\c@figure=\count299
\c@lofdepth=\count300
\cftbeforefigureskip=\skip185
\cftfigureindent=\skip186
\cftfigurenumwidth=\skip187
\c@table=\count301
\c@lotdepth=\count302
\cftbeforetableskip=\skip188
\cfttableindent=\skip189
\cfttablenumwidth=\skip190
Package abstract [2008/07/23] emulated by memoir.
Package appendix [2008/07/23] emulated by memoir.
Package booktabs [2016/05/16] emulated by memoir.
Package ccaption [2008/07/23] emulated by memoir.
Package changepage [2008/07/23] emulated by memoir.
Package chngcntr [2008/07/23] emulated by memoir.
Package chngpage [2008/07/23] emulated by memoir.
Package crop emulated by memoir.
Package enumerate [2008/07/23] emulated by memoir.
Package epigraph [2008/07/23] emulated by memoir.
Package ifmtarg [2008/07/23] emulated by memoir.
Package index [2008/07/23] emulated by memoir.
Package makeidx [2008/07/23] emulated by memoir.
Package moreverb [2008/07/23] emulated by memoir.
Package needspace [2008/07/23] emulated by memoir.
Package newfile [2008/07/23] emulated by memoir.
Package nextpage [2008/07/23] emulated by memoir.
Package pagenote [2008/07/23] emulated by memoir.
Package parskip [2008/07/23] emulated by memoir.
Package patchcmd [2008/07/23] emulated by memoir.
Package setspace [2008/07/23] emulated by memoir.
Package shortvrb [2008/07/23] emulated by memoir.
Package showidx [2008/07/23] emulated by memoir.
Package titleref [2008/07/23] emulated by memoir.
Package titling [2008/07/23] emulated by memoir.
Package tocbibind [2008/07/23] emulated by memoir.
Package tocloft [2008/07/23] emulated by memoir.
Package tocvsec2 [2008/07/23] emulated by memoir.
Package verbatim [2008/07/23] emulated by memoir.
Package verse [2008/07/23] emulated by memoir.
) (/usr/local/texlive/2021/texmf-dist/tex/latex/footmisc/footmisc.sty
Package: footmisc 2011/06/06 v5.5b a miscellany of footnote facilities
\FN@temptoken=\toks23
\footnotemargin=\dimen183

LaTeX Warning: Command \@makecol  has changed.
               Check if current package is valid.

\c@pp@next@reset=\count303
Package footmisc Info: Declaring symbol style bringhurst on input line 855.
Package footmisc Info: Declaring symbol style chicago on input line 863.
Package footmisc Info: Declaring symbol style wiley on input line 872.
Package footmisc Info: Declaring symbol style lamport-robust on input line 883.

Package footmisc Info: Declaring symbol style lamport* on input line 903.
Package footmisc Info: Declaring symbol style lamport*-robust on input line 924
.
) (/usr/local/texlive/2021/texmf-dist/tex/latex/base/ifthen.sty
Package: ifthen 2014/09/29 v1.1c Standard LaTeX ifthen package (DPC)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fancyhdr/fancyhdr.sty
Package: fancyhdr 2021/01/28 v4.0.1 Extensive control of page headers and foote
rs
\f@nch@headwidth=\skip191
\f@nch@O@elh=\skip192
\f@nch@O@erh=\skip193
\f@nch@O@olh=\skip194
\f@nch@O@orh=\skip195
\f@nch@O@elf=\skip196
\f@nch@O@erf=\skip197
\f@nch@O@olf=\skip198
\f@nch@O@orf=\skip199
) (/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2020/09/09 v1.2b Enhanced LaTeX Graphics (DPC,SPQR)
(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks24
) (/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2020/08/30 v1.4c Standard LaTeX Graphics (DPC,SPQR)
(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/graphics-cfg/graphics.cfg
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: dvips.def on input line 105.
(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics-def/dvips.def
File: dvips.def 2017/06/20 v3.1d Graphics/color driver for dvips
))
\Gin@req@height=\dimen184
\Gin@req@width=\dimen185
) (/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/color.sty
Package: color 2020/02/24 v1.2b Standard LaTeX Color (DPC)
(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics-cfg/color.cfg
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package color Info: Driver file: dvips.def on input line 147.
(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/dvipsnam.def
File: dvipsnam.def 2016/06/17 v3.0m Driver-dependent file (DPC,SPQR)
)) (/usr/local/texlive/2021/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2020/09/23 v2.17i AMS math features
\@mathmargin=\skip256
For additional information on amsmath, use the `?' option.
(/usr/local/texlive/2021/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text
(/usr/local/texlive/2021/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks25
\ex@=\dimen186
)) (/usr/local/texlive/2021/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen187
) (/usr/local/texlive/2021/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 2016/03/08 v2.02 operator names
)
\inf@bad=\count304
LaTeX Info: Redefining \frac on input line 234.
\uproot@=\count305
\leftroot@=\count306
LaTeX Info: Redefining \overline on input line 399.
\classnum@=\count307
\DOTSCASE@=\count308
LaTeX Info: Redefining \ldots on input line 496.
LaTeX Info: Redefining \dots on input line 499.
LaTeX Info: Redefining \cdots on input line 620.
\Mathstrutbox@=\box52
\strutbox@=\box53
\big@size=\dimen188
LaTeX Font Info:    Redeclaring font encoding OML on input line 743.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 744.
\macc@depth=\count309
\c@MaxMatrixCols=\count310
\dotsspace@=\muskip16
\c@parentequation=\count311
\dspbrk@lvl=\count312
\tag@help=\toks26
\row@=\count313
\column@=\count314
\maxfields@=\count315
\andhelp@=\toks27
\eqnshift@=\dimen189
\alignsep@=\dimen190
\tagshift@=\dimen191
\tagwidth@=\dimen192
\totwidth@=\dimen193
\lineht@=\dimen194
\@envbody=\toks28
\multlinegap=\skip257
\multlinetaggap=\skip258
\mathdisplay@stack=\toks29
LaTeX Info: Redefining \[ on input line 2923.
LaTeX Info: Redefining \] on input line 2924.
) (/usr/local/texlive/2021/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols
(/usr/local/texlive/2021/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Redeclaring math symbol \hbar on input line 98.
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
)) (/usr/local/texlive/2021/texmf-dist/tex/latex/tools/bm.sty
Package: bm 2019/07/24 v1.2d Bold Symbol Support (DPC/FMi)
\symboldoperators=\mathgroup6
\symboldletters=\mathgroup7
\symboldsymbols=\mathgroup8
LaTeX Font Info:    Redeclaring math alphabet \mathbf on input line 141.
LaTeX Info: Redefining \bm on input line 209.
) (./style/atlasphysics.sty
\hrs=\count316
\minu=\count317
\temptime=\count318
\boxsqbox=\box54
\boxsize=\dimen195
\dkwidth=\dimen196
) (/usr/local/texlive/2021/texmf-dist/tex/latex/tools/calc.sty
Package: calc 2017/05/25 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count319
\calc@Bcount=\count320
\calc@Adimen=\dimen197
\calc@Bdimen=\dimen198
\calc@Askip=\skip259
\calc@Bskip=\skip260
LaTeX Info: Redefining \setlength on input line 80.
LaTeX Info: Redefining \addtolength on input line 81.
\calc@Ccount=\count321
\calc@Cskip=\skip261
) (/usr/local/texlive/2021/texmf-dist/tex/latex/lineno/lineno.sty
Package: lineno 2005/11/02 line numbers on paragraphs v4.41
\linenopenalty=\count322
\output=\toks30
\linenoprevgraf=\count323
\linenumbersep=\dimen199
\linenumberwidth=\dimen256
\c@linenumber=\count324
\c@pagewiselinenumber=\count325
\c@LN@truepage=\count326
\c@internallinenumber=\count327
\c@internallinenumbers=\count328
\quotelinenumbersep=\dimen257
\bframerule=\dimen258
\bframesep=\dimen259
\bframebox=\box55
LaTeX Info: Redefining \\ on input line 3056.
) (/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2021-02-27 v7.00k Hypertext links for LaTeX
(/usr/local/texlive/2021/texmf-dist/tex/generic/ltxcmds/ltxcmds.sty
Package: ltxcmds 2020-05-10 v1.25 LaTeX kernel commands for general use (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/generic/pdftexcmds/pdftexcmds.sty
Package: pdftexcmds 2020-06-27 v0.33 Utility functions of pdfTeX for LuaTeX (HO
)
(/usr/local/texlive/2021/texmf-dist/tex/generic/infwarerr/infwarerr.sty
Package: infwarerr 2019/12/03 v1.5 Providing info/warning/error messages (HO)
)
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode is ignored in DVI mode.
) (/usr/local/texlive/2021/texmf-dist/tex/generic/kvsetkeys/kvsetkeys.sty
Package: kvsetkeys 2019/12/15 v1.18 Key value parser (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/generic/kvdefinekeys/kvdefinekeys.sty
Package: kvdefinekeys 2019-12-19 v1.6 Define keys (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/generic/pdfescape/pdfescape.sty
Package: pdfescape 2019/12/09 v1.15 Implements pdfTeX's escape features (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/hycolor/hycolor.sty
Package: hycolor 2020-01-27 v1.10 Color options for hyperref/bookmark (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/letltxmacro/letltxmacro.sty
Package: letltxmacro 2019/12/03 v1.6 Let assignment for LaTeX macros (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/auxhook/auxhook.sty
Package: auxhook 2019-12-17 v1.6 Hooks for auxiliary files (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/kvoptions/kvoptions.sty
Package: kvoptions 2020-10-07 v3.14 Key value format for package options (HO)
)
\@linkdim=\dimen260
\Hy@linkcounter=\count329
\Hy@pagecounter=\count330
(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2021-02-27 v7.00k Hyperref: PDFDocEncoding definition (HO)
Now handling font encoding PD1 ...
... no UTF-8 mapping file for font encoding PD1
)
(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/hyperref-langpatches.def
File: hyperref-langpatches.def 2021-02-27 v7.00k Hyperref: patches for babel la
nguages
) (/usr/local/texlive/2021/texmf-dist/tex/generic/intcalc/intcalc.sty
Package: intcalc 2019/12/15 v1.3 Expandable calculations with integers (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/generic/etexcmds/etexcmds.sty
Package: etexcmds 2019/12/15 v1.7 Avoid name clashes with e-TeX commands (HO)
)
\Hy@SavedSpaceFactor=\count331
(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/puenc.def
File: puenc.def 2021-02-27 v7.00k Hyperref: PDF Unicode definition (HO)
Now handling font encoding PU ...
... no UTF-8 mapping file for font encoding PU
)
Package hyperref Info: Option `colorlinks' set `true' on input line 4073.
Package hyperref Info: Option `breaklinks' set `true' on input line 4073.
Package hyperref Info: Option `linktocpage' set `true' on input line 4073.
Package hyperref Info: Option `colorlinks' set `true' on input line 4073.
Package hyperref Info: Hyper figures OFF on input line 4192.
Package hyperref Info: Link nesting OFF on input line 4197.
Package hyperref Info: Hyper index ON on input line 4200.
Package hyperref Info: Plain pages OFF on input line 4207.
Package hyperref Info: Backreferencing ON on input line 4210.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4445.
(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/backref.sty
Package: backref 2021/02/04 v1.41 Bibliographical back referencing

(/usr/local/texlive/2021/texmf-dist/tex/latex/rerunfilecheck/rerunfilecheck.sty
Package: rerunfilecheck 2019/12/05 v1.9 Rerun checks for auxiliary files (HO)
(/usr/local/texlive/2021/texmf-dist/tex/latex/base/atveryend-ltx.sty
Package: atveryend-ltx 2020/08/19 v1.0a Emulation of the original atvery packag
e
with kernel methods
)
(/usr/local/texlive/2021/texmf-dist/tex/generic/uniquecounter/uniquecounter.sty
Package: uniquecounter 2019/12/15 v1.4 Provide unlimited unique counter (HO)
(/usr/local/texlive/2021/texmf-dist/tex/generic/bigintcalc/bigintcalc.sty
Package: bigintcalc 2019/12/15 v1.5 Expandable calculations on big integers (HO
)
))
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
86.
))
\c@Hy@tempcnt=\count332
(/usr/local/texlive/2021/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip17
Package: url 2013/09/16  ver 3.4  Verb mode for urls, etc.
)
LaTeX Info: Redefining \url on input line 4804.
\XeTeXLinkMargin=\dimen261
(/usr/local/texlive/2021/texmf-dist/tex/generic/bitset/bitset.sty
Package: bitset 2019/12/09 v1.3 Handle bit-vector datatype (HO)
)
\Fld@menulength=\count333
\Field@Width=\dimen262
\Fld@charsize=\dimen263
\Field@toks=\toks31
Package hyperref Info: Hyper figures OFF on input line 6075.
Package hyperref Info: Link nesting OFF on input line 6080.
Package hyperref Info: Hyper index ON on input line 6083.
Package hyperref Info: backreferencing ON on input line 6088.
Package hyperref Info: Link coloring ON on input line 6093.
Package hyperref Info: Link coloring with OCG OFF on input line 6100.
Package hyperref Info: PDF/A mode OFF on input line 6105.
LaTeX Info: Redefining \ref on input line 6145.
LaTeX Info: Redefining \pageref on input line 6149.
(/usr/local/texlive/2021/texmf-dist/tex/latex/base/atbegshi-ltx.sty
Package: atbegshi-ltx 2020/08/17 v1.0a Emulation of the original atbegshi packa
ge
with kernel methods
)
\Hy@abspage=\count334

Package hyperref Message: Stopped early.

) (/usr/local/texlive/2021/texmf-dist/tex/latex/memoir/memhfixc.sty
Package: memhfixc 2019/10/24 v1.18 nameref/hyperref package fixes for memoir cl
ass
\c@memhycontfloat=\count335
\c@Hpagenote=\count336
)
Package hyperref Info: Driver: htex4ht.
(/usr/local/texlive/2021/texmf-dist/tex/latex/hyperref/htex4ht.def
File: htex4ht.def 2021-02-27 v7.00k Hyperref driver for TeX4ht
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/tex4ht.sty
version 2021-03-06-13:30
Package: tex4ht 
--------------------------------------
--- Note --- for _ at preamble, use the command line option `early_'
--------------------------------------
--------------------------------------
--- Note --- for ^ at preamble, use the command line option `early^'
--------------------------------------
\tmp:toks=\toks32
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/usepackage.4ht
version 2021-02-07-14:58
) (/usr/local/texlive/2021/texmf-dist/tex/latex/cite/cite.sty
LaTeX Info: Redefining \cite on input line 302.
LaTeX Info: Redefining \nocite on input line 332.
Package: cite 2015/02/27  v 5.5
) (/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/rotating.sty
Package: rotating 2016/08/11 v2.16d rotated objects in LaTeX
\c@r@tfl@t=\count337
\rotFPtop=\skip262
\rotFPbot=\skip263
\rot@float@box=\box56
\rot@mess@toks=\toks33
) (/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/lscape.sty
Package: lscape 2020/05/28 v3.02 Landscape Pages (DPC)
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/graphics-hooks.4ht
version 2020-10-17-13:53
)) (/usr/local/texlive/2021/texmf-dist/tex/latex/tools/longtable.sty
Package: longtable 2020/01/07 v4.13 Multi-page Table package (DPC)
\LTleft=\skip264
\LTright=\skip265
\LTpre=\skip266
\LTpost=\skip267
\LTchunksize=\count338
\LTcapwidth=\dimen264
\LT@head=\box57
\LT@firsthead=\box58
\LT@foot=\box59
\LT@lastfoot=\box60
\LT@cols=\count339
\LT@rows=\count340
\c@LT@tables=\count341
\c@LT@chunks=\count342
\LT@p@ftn=\toks34
) (/usr/local/texlive/2021/texmf-dist/tex/latex/ncctools/dcounter.sty
Package: dcounter 2005/04/25 v1.2 Dynamic Counters (NCC)
) (./style/cleveref.sty

LaTeX Warning: You have requested package `style/cleveref',
               but the package provides `cleveref'.

Package: cleveref 2011/03/22 v0.17.9 Intelligent cross-referencing
LaTeX Info: Redefining \Cref on input line 1103.
Package cleveref Info: `hyperref' support loaded on input line 2157.
LaTeX Info: Redefining \cref on input line 2157.
LaTeX Info: Redefining \Cref on input line 2157.
LaTeX Info: Redefining \crefrange on input line 2157.
LaTeX Info: Redefining \Crefrange on input line 2157.
Package cleveref Info: always capitalise cross-reference names on input line 54
96.
Package cleveref Info: loaded `english' language definitions on input line 5499
.
Package cleveref Info: always capitalise cross-reference names on input line 55
00.
)

******************************************************
Stock height and width: 794.96999pt by 614.295pt
Top and edge trims: 0pt and 0pt
Page height and width: 794.96999pt by 614.295pt
Text height and width: 586pt by 433pt
Spine and edge margins: 108.405pt and 72.27pt
Upper and lower margins: 108.405pt and 100.56499pt
Headheight and headsep: 13pt and 13pt
Footskip: 26pt
Columnsep and columnseprule: 10pt and 0pt
Marginparsep and marginparwidth: 7pt and 58.27pt
Sidecapsep and sidecapwidth: 7pt and 71pt
Sidebarhsep and sidebarwidth: 7pt and 71pt
Sidebarvsep and sidebartopsep: 12pt and 0pt
Sidebarheight: 548.39996pt
Sidefoothsep and sidefootwidth: 7pt and 71pt
Sidefootvsep and sidefootheight: 12pt and 548.39996pt
******************************************************

)
\@input{sections/docdefs.aux}
\openout2 = `sections/docdefs.aux'.

(./sections/docdefs.tex)
\@input{sections/macros.aux}
\openout2 = `sections/macros.aux'.

(./sections/macros.tex) (/usr/local/texlive/2021/texmf-dist/tex/latex/placeins/
placeins.sty
Package: placeins 2005/04/18  v 2.2
) (/usr/local/texlive/2021/texmf-dist/tex/latex/multirow/multirow.sty
Package: multirow 2021/03/15 v2.8 Span multiple rows of a table
\multirow@colwidth=\skip268
\multirow@cntb=\count343
\multirow@dima=\skip269
\bigstrutjot=\dimen265
) (/usr/local/texlive/2021/texmf-dist/tex/latex/caption/subcaption.sty
Package: subcaption 2020/10/07 v1.3j Sub-captions (AR)
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/caption-hooks.4ht) (/usr
/local/texlive/2021/texmf-dist/tex/latex/caption/caption.sty
Package: caption 2020/10/26 v3.5g Customizing captions (AR)
(/usr/local/texlive/2021/texmf-dist/tex/latex/caption/caption3.sty
Package: caption3 2020/10/21 v2.2e caption3 kernel (AR)
\captionmargin=\dimen266
\captionmargin@=\dimen267
\captionwidth=\dimen268
\caption@tempdima=\dimen269
\caption@indent=\dimen270
\caption@parindent=\dimen271
\caption@hangindent=\dimen272
Package caption Info: memoir document class detected.
(/usr/local/texlive/2021/texmf-dist/tex/latex/caption/caption-memoir.sto
File: caption-memoir.sto 2020/10/10 v2.1 Adaption of the caption package to the
 memoir document class (AR)
))
\c@caption@flags=\count344
\c@continuedfloat=\count345
Package caption Info: changepage package is loaded.
\caption@adjustwidth@hsize=\dimen273
\caption@adjustwidth@linewidth=\dimen274
Package caption Info: hyperref package is loaded.
Package caption Info: Hyperref support is turned off
(caption)             because hyperref has stopped early.
Package caption Info: longtable package is loaded.
(/usr/local/texlive/2021/texmf-dist/tex/latex/caption/ltcaption.sty
Package: ltcaption 2020/05/30 v1.4b longtable captions (AR)
)
Package caption Info: rotating package is loaded.
)
\c@subfigure=\count346
\c@subtable=\count347
) (/usr/local/texlive/2021/texmf-dist/tex/latex/tools/xspace.sty
Package: xspace 2014/10/28 v1.13 Space after command names (DPC,MH)
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/minted-sty-hooks.4ht
version 2020-12-13-11:14
) (/usr/local/texlive/2021/texmf-dist/tex/latex/minted/minted.sty
Package: minted 2017/07/19 v2.5 Yet another Pygments shim for LaTeX
(/usr/local/texlive/2021/texmf-dist/tex/latex/fvextra/fvextra.sty
Package: fvextra 2019/02/04 v1.4 fvextra - extensions and patches for fancyvrb
(/usr/local/texlive/2021/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2020/10/05 v2.5k e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count348
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fancyvrb/fancyvrb.sty
Package: fancyvrb 2021/01/20 v3.7 verbatim text (tvz,hv)
\FV@CodeLineNo=\count349
\FV@InFile=\read3
\FV@TabBox=\box61
\c@FancyVerbLine=\count350
\FV@StepNumber=\count351
\FV@OutFile=\write4
) (/usr/local/texlive/2021/texmf-dist/tex/latex/upquote/upquote.sty
Package: upquote 2012/04/19 v1.3 upright-quote and grave-accent glyphs in verba
tim
)
\c@FV@TrueTabGroupLevel=\count352
\c@FV@TrueTabCounter=\count353
\FV@TabBox@Group=\box62
\FV@TmpLength=\skip270
\c@FV@HighlightLinesStart=\count354
\c@FV@HighlightLinesStop=\count355
\FV@LoopCount=\count356
\FV@NCharsBox=\box63
\FV@BreakIndent=\dimen275
\FV@BreakIndentNChars=\count357
\FV@BreakSymbolSepLeft=\dimen276
\FV@BreakSymbolSepLeftNChars=\count358
\FV@BreakSymbolSepRight=\dimen277
\FV@BreakSymbolSepRightNChars=\count359
\FV@BreakSymbolIndentLeft=\dimen278
\FV@BreakSymbolIndentLeftNChars=\count360
\FV@BreakSymbolIndentRight=\dimen279
\FV@BreakSymbolIndentRightNChars=\count361
\c@FancyVerbLineBreakLast=\count362
\FV@LineBox=\box64
\FV@LineIndentBox=\box65
\FV@LineWidth=\dimen280
) (/usr/local/texlive/2021/texmf-dist/tex/latex/tools/shellesc.sty
Package: shellesc 2019/11/08 v1.0c unified shell escape interface for LaTeX
Package shellesc Info: Restricted shell escape enabled on input line 77.
) (/usr/local/texlive/2021/texmf-dist/tex/latex/ifplatform/ifplatform.sty
Package: ifplatform 2017/10/13 v0.4a Testing for the operating system
(/usr/local/texlive/2021/texmf-dist/tex/generic/catchfile/catchfile.sty
Package: catchfile 2019/12/09 v1.8 Catch the contents of a file (HO)
) (/usr/local/texlive/2021/texmf-dist/tex/generic/iftex/ifluatex.sty
Package: ifluatex 2019/10/25 v1.5 ifluatex legacy package. Use iftex instead.
)

Package ifplatform Warning: 
    shell escape is disabled, so I can only detect \ifwindows.

) (/usr/local/texlive/2021/texmf-dist/tex/generic/xstring/xstring.sty (/usr/loc
al/texlive/2021/texmf-dist/tex/generic/xstring/xstring.tex
\integerpart=\count363
\decimalpart=\count364
)
Package: xstring 2019/02/06 v1.83 String manipulations (CT)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/framed/framed.sty
Package: framed 2011/10/22 v 0.96: framed or shaded text with page breaks
\OuterFrameSep=\skip271
\fb@frw=\dimen281
\fb@frh=\dimen282
) (/usr/local/texlive/2021/texmf-dist/tex/latex/float/float.sty
Package: float 2001/11/08 v1.3d Float enhancements (AL)
\c@float@type=\count365
\float@exts=\toks35
\float@box=\box66
\@float@everytoks=\toks36
\@floatcapt=\box67
)
\minted@appexistsfile=\read4
\minted@bgbox=\box68
\minted@code=\write5
\c@minted@FancyVerbLineTemp=\count366
\c@minted@pygmentizecounter=\count367
\@float@every@listing=\toks37
\c@listing=\count368
)
runsystem(mkdir -p _minted-thesis)...disabled (restricted).


! Package minted Error: You must invoke LaTeX with the -shell-escape flag.

See the minted package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.22 \usepackage
                {listings}
Pass the -shell-escape flag to LaTeX. Refer to the minted.sty documentation for
 more information.

(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/xcolor-hooks.4ht
version 2020-10-17-13:53
) (/usr/local/texlive/2021/texmf-dist/tex/latex/xcolor/xcolor.sty
Package: xcolor 2016/05/11 v2.12 LaTeX color extensions (UK)
(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics-cfg/color.cfg
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package xcolor Info: Driver file: dvips.def on input line 225.
LaTeX Info: Redefining \color on input line 709.
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1348.
Package xcolor Info: Model `RGB' extended on input line 1364.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1366.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1367.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1368.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1369.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1370.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1371.
) (/usr/local/texlive/2021/texmf-dist/tex/latex/listings/listings.sty
\lst@mode=\count369
\lst@gtempboxa=\box69
\lst@token=\toks38
\lst@length=\count370
\lst@currlwidth=\dimen283
\lst@column=\count371
\lst@pos=\count372
\lst@lostspace=\dimen284
\lst@width=\dimen285
\lst@newlines=\count373
\lst@lineno=\count374
\lst@maxwidth=\dimen286
(/usr/local/texlive/2021/texmf-dist/tex/latex/listings/lstmisc.sty
File: lstmisc.sty 2020/03/24 1.8d (Carsten Heinz)
\c@lstnumber=\count375
\lst@skipnumbers=\count376
\lst@framebox=\box70
) (/usr/local/texlive/2021/texmf-dist/tex/latex/listings/listings.cfg
File: listings.cfg 2020/03/24 1.8d listings configuration
))
Package: listings 2020/03/24 1.8d (Carsten Heinz)
(/usr/local/texlive/2021/texmf-dist/tex/latex/glossaries/base/glossaries.sty
Package: glossaries 2020/03/19 v4.46 (NLCT)
(/usr/local/texlive/2021/texmf-dist/tex/latex/xkeyval/xkeyval.sty
Package: xkeyval 2020/11/20 v2.8 package option processing (HA)
(/usr/local/texlive/2021/texmf-dist/tex/generic/xkeyval/xkeyval.tex (/usr/local
/texlive/2021/texmf-dist/tex/generic/xkeyval/xkvutils.tex
\XKV@toks=\toks39
\XKV@tempa@toks=\toks40
)
\XKV@depth=\count377
File: xkeyval.tex 2014/12/03 v2.7a key=value parser (HA)
)) (/usr/local/texlive/2021/texmf-dist/tex/latex/mfirstuc/mfirstuc.sty
Package: mfirstuc 2017/11/14 v2.06 (NLCT)
\@glsmfirst=\toks41
\@glsmrest=\toks42
) (/usr/local/texlive/2021/texmf-dist/tex/latex/xfor/xfor.sty
Package: xfor 2009/02/05 v1.05 (NLCT)
) (/usr/local/texlive/2021/texmf-dist/tex/latex/datatool/datatool-base.sty
Package: datatool-base 2019/09/27 v2.32 (NLCT)
(/usr/local/texlive/2021/texmf-dist/tex/latex/substr/substr.sty
Package: substr 2009/10/20 v1.2 Handle substrings
\c@su@anzahl=\count378
) (/usr/local/texlive/2021/texmf-dist/tex/latex/datatool/datatool-fp.sty
Package: datatool-fp 2019/09/27 v2.32 (NLCT)
(/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp.sty
Package: fp 1995/04/02
`Fixed Point Package', Version 0.8, April 2, 1995 (C) Michael Mehlich (/usr/loc
al/texlive/2021/texmf-dist/tex/latex/fp/defpattern.sty
Package: defpattern 1994/10/12
\actioncount=\count379
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-basic.sty
Package: fp-basic 1996/05/13
\FP@xs=\count380
\FP@xia=\count381
\FP@xib=\count382
\FP@xfa=\count383
\FP@xfb=\count384
\FP@rega=\count385
\FP@regb=\count386
\FP@regs=\count387
\FP@times=\count388
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-addons.sty
Package: fp-addons 1995/03/15
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-snap.sty
Package: fp-snap 1995/04/05
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-exp.sty
Package: fp-exp 1995/04/03
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-trigo.sty
Package: fp-trigo 1995/04/14
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-pas.sty
Package: fp-pas 1994/08/29
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-random.sty
Package: fp-random 1995/02/23
\FPseed=\count389
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-eqn.sty
Package: fp-eqn 1995/04/03
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-upn.sty
Package: fp-upn 1996/10/21
) (/usr/local/texlive/2021/texmf-dist/tex/latex/fp/fp-eval.sty
Package: fp-eval 1995/04/03
)))
\@dtl@toks=\toks43
\@dtl@tmpcount=\count390
\dtl@tmplength=\skip272
\dtl@sortresult=\count391
\@dtl@numgrpsepcount=\count392
\@dtl@datatype=\count393
\dtl@codeA=\count394
\dtl@codeB=\count395
\@dtl@foreach@level=\count396
)
(/usr/local/texlive/2021/texmf-dist/tex/latex/glossaries/base/glossaries-compat
ible-307.sty
Package: glossaries-compatible-307 2020/03/19 v4.46 (NLCT)
)
\gls@level=\count397
\@gls@tmpb=\toks44
\gls@tmplen=\skip273
\glskeylisttok=\toks45
\glslabeltok=\toks46
\glsshorttok=\toks47
\glslongtok=\toks48

(/usr/local/texlive/2021/texmf-dist/tex/latex/glossaries/styles/glossary-hypern
av.sty
Package: glossary-hypernav 2020/03/19 v4.46 (NLCT)
)
(/usr/local/texlive/2021/texmf-dist/tex/latex/glossaries/styles/glossary-list.s
ty
Package: glossary-list 2020/03/19 v4.46 (NLCT)
\glslistdottedwidth=\skip274
)
(/usr/local/texlive/2021/texmf-dist/tex/latex/glossaries/styles/glossary-long.s
ty
Package: glossary-long 2020/03/19 v4.46 (NLCT)
\glsdescwidth=\skip275
\glspagelistwidth=\skip276
)
(/usr/local/texlive/2021/texmf-dist/tex/latex/glossaries/styles/glossary-super.
sty
Package: glossary-super 2020/03/19 v4.46 (NLCT)
(/usr/local/texlive/2021/texmf-dist/tex/latex/supertabular/supertabular.sty
Package: supertabular 2020/02/02 v4.1g the supertabular environment
\c@tracingst=\count398
\ST@wd=\dimen287
\ST@rightskip=\skip277
\ST@leftskip=\skip278
\ST@parfillskip=\skip279
\ST@pageleft=\dimen288
\ST@headht=\dimen289
\ST@tailht=\dimen290
\ST@pagesofar=\dimen291
\ST@pboxht=\dimen292
\ST@lineht=\dimen293
\ST@prevht=\dimen294
\ST@toadd=\dimen295
\ST@dimen=\dimen296
\ST@pbox=\box71
))
(/usr/local/texlive/2021/texmf-dist/tex/latex/glossaries/styles/glossary-tree.s
ty
Package: glossary-tree 2020/03/19 v4.46 (NLCT)
\glstreeindent=\skip280
)) (./sections/glossary.tex) (./MyConfig.cfg (/usr/local/texlive/2021/texmf-dis
t/tex/generic/tex4ht/tex4ht.4ht
version 2020-03-12-14:03
--------------------------------------
--- Note --- for additional information, use the command line option `info'
--------------------------------------
::::::::::::::::::::::::::::::::::::::::::
 TeX4ht info is available in the log file 
::::::::::::::::::::::::::::::::::::::::::
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/tex4ht.sty
version 2021-03-06-13:30
--- needs --- tex4ht thesis ---
\tmp:cnt=\count399
\openout15 = `thesis.tmp'.

(./thesis.tmp)
\tmp:dim=\skip281
(./thesis.xref)
\:refout=\write6
\openout6 = `thesis.xref'.

(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
--------------------------------------
--- Note --- to remove the <?xml version=...?> processing instruction use the c
ommand line option `no-VERSION'
--------------------------------------
--------------------------------------
--- Note --- to remove the DOCTYPE declaration use the command line option `no-
DOCTYPE'
--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)
--------------------------------------
--- Note --- for marking of the base font, use the command line option `fonts+'

--------------------------------------
--------------------------------------
--- Note --- for non active _, use the command line option `no_'
--------------------------------------
--------------------------------------
--- Note --- for _ of catcode 13, use the command line option `_13'
--------------------------------------
--------------------------------------
--- Note --- for non active ^, use the command line option `no^'
--------------------------------------
--------------------------------------
--- Note --- for ^ of catcode 13, use the command line option `^13'
--------------------------------------
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
--------------------------------------
--- Note --- to ignore CSS font decoration, use the `NoFonts' command line opti
on
--------------------------------------
--------------------------------------
--- Note --- for jpg bitmaps of pictures, use the `jpg' command line option. (C
haracter bitmaps are controled only by `g' records of tex4ht.env and `-g' switc
hes of tex4ht.c) 
--------------------------------------
--------------------------------------
--- Note --- for gif bitmaps of pictures, use the `gif' command line option. (C
haracter bitmaps are controled only by `g' records of tex4ht.env and `-g' switc
hes of tex4ht.c) 
--------------------------------------
--------------------------------------
--- Note --- for content and toc in 2 frames, use the command line option `fram
es'
--------------------------------------
--------------------------------------
--- Note --- for content, toc, and footnotes in 3 frames, use the command line 
option `frames-fn'
--------------------------------------
--------------------------------------
--- Note --- for file extension name xht, use the command line option `xht'
--------------------------------------
TeX4ht package options: mathjax,fn-in,p-width,charset=utf-8,html5,html,htex4ht,
xhtml
--------------------------------------
--- Note --- To print a timestamp, use the command line option timestamp
--------------------------------------
--------------------------------------
--- Note --- to ignore CSS code, use the command line option `-css
--------------------------------------
--------------------------------------
--- Note --- for inline CSS code, use the command line option `css-in'
--------------------------------------
--------------------------------------
--- Note --- for pop ups on mouse over, use the command line option `mouseover'

--------------------------------------
--------------------------------------
--- Note --- for addressing images in a subdirectory, use the command line opti
on `imgdir:.../'
--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
--------------------------------------
--- Note --- To print a timestamp, use the command line option timestamp
--------------------------------------
)
\:tokwrite=\toks49
\:tokpage=\toks50
--------------------------------------
--- Note --- for back links to toc, use the command line option `sections+'
--------------------------------------
--------------------------------------
--- Note --- for linear crosslinks of pages, use the command line option `next'

--------------------------------------
\openout15 = `thesis.4ct'.

\:tocout=\write7
\openout7 = `thesis.4tc'.

(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/latex.4ht
version 2021-02-06-14:21
LaTeX Info: Redefining \_ on input line 173.
LaTeX Info: Redefining \, on input line 791.
LaTeX Info: Redefining \; on input line 792.
LaTeX Info: Redefining \! on input line 793.
LaTeX Info: Redefining \: on input line 794.
LaTeX Info: Redefining \> on input line 795.
--------------------------------------
--- Note --- for links into captions, instead of float heads, use the command l
ine option `refcaption'
--------------------------------------
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
--------------------------------------
--- Note --- For mini tocs immediately aftter the header use the command line o
ption `minitoc<'
--------------------------------------
--------------------------------------
--- Note --- for enumerated list elements with valued data, use the command lin
e option `enumerate+'
--------------------------------------
--------------------------------------
--- Note --- for enumerated list elements li's with value attributes, use the c
ommand line option `enumerate-'
--------------------------------------
--------------------------------------
--- Note --- for CSS2 code, use the command line option `css2'
--------------------------------------
--------------------------------------
--- Note --- for pictorial tabular, use the command line option `pic-tabular'
--------------------------------------
--------------------------------------
--- Note --- for bitmap fbox'es, use the command line option `pic-fbox'
--------------------------------------
--------------------------------------
--- Note --- for bitmap framebox'es, use the command line option `pic-framebox'

--------------------------------------
\fn:box=\box72
--------------------------------------
--- Note --- for tracing of latex font commands, use the command line option `f
onts'
--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
--------------------------------------
--- Note --- for pictorial eqnarray, use the command line option `pic-eqnarray'

--------------------------------------
--------------------------------------
--- Note --- for pictorial array, use the command line option `pic-array'
--------------------------------------
--------------------------------------
--- Note --- for pictorial $...$ environments, use the command line option `pic
-m' (not recommended!!)
--------------------------------------
--------------------------------------
--- Note --- for pictorial $...$ and $$...$$ environments with latex alt, use t
he command line option `pic-m+' (not safe!!)
--------------------------------------
--------------------------------------
--- Note --- for pictorial array, use the command line option `pic-array'
--------------------------------------
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/mathjax-latex-4ht.4ht
version 2021-02-18-14:03
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/expl3-hooks.4ht
version 2020-10-17-13:53
) (/usr/local/texlive/2021/texmf-dist/tex/latex/l3kernel/expl3.sty
Package: expl3 2021-02-18 L3 programming layer (loader) 
(/usr/local/texlive/2021/texmf-dist/tex/latex/l3backend/l3backend-dvips.def
File: l3backend-dvips.def 2021-03-18 L3 backend support: dvips
\l__pdf_internal_box=\box73
\g__pdf_backend_object_int=\count400
\l__pdf_backend_content_box=\box74
\l__pdf_backend_model_box=\box75
\g__pdf_backend_annotation_int=\count401
\g__pdf_backend_link_int=\count402
\g__pdf_backend_link_sf_int=\count403
)) (/usr/local/texlive/2021/texmf-dist/tex/latex/environ/environ.sty
Package: environ 2014/05/04 v0.3 A new way to define environments
(/usr/local/texlive/2021/texmf-dist/tex/latex/trimspaces/trimspaces.sty
Package: trimspaces 2009/09/17 v1.1 Trim spaces around a token list
)))) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/fontmath.4ht
version 2018-11-06-15:55
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/memoir.4ht
version 2021-01-29-14:14
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/book.4ht (/usr/local/tex
live/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
--------------------------------------
--- Note --- for automatic sectioning pagination, use the command line option `
1', `2', `3', '4', '5', '6', or '7'
--------------------------------------
--------------------------------------
--- Note --- for files named derived from section titles, use the command line 
option `sec-filename'
--------------------------------------
--------------------------------------
--- Note --- for i-columns index, use the command line option `index=i' (e.g., 
index=2)
--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/verse.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/booktabs.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
))
\c@Hfootnote=\count404
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/array.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
--------------------------------------
--- Note --- for pictorial array, use the command line option `pic-array'
--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/dcolumn.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/tabularx.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/footmisc.4ht
version 2019-12-23-13:36
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/ifthen.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/graphicx.4ht
version 2018-10-01-14:24
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/graphics.4ht (/usr/lo
cal/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
--------------------------------------
--- Note --- if included graphics are of degraded quality, try the command line
 options `graphics-num' or `graphics-'. The `num' should provide the density of
 pixels in the bitmaps (e.g., 110). 
--------------------------------------
--------------------------------------
--- Note --- for key dimensions try the option `Gin-dim'; for key dimensions wh
en bounding box is unavailable try `Gin-dim+'; neither is recommended
--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/dvips.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/color.4ht (/usr/local
/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/dvipsnam.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/latex/graphics/dvipsnam.def) (/usr/loca
l/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/amsmath.4ht
version 2019-12-29-14:17
\tmp:muskip=\muskip18
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/amstext.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/amsbsy.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/amsopn.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/amssymb.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/amsfonts.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/bm.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/lineno.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
l.37337 --- TeX4ht warning --- The line numbers are commented out. To reintrodu
ce them, use the \Configure{lineno}{...}{...} command ---
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/hyperref.4ht
version 2021-01-02-13:53
LaTeX Info: Redefining \autoref on input line 88.
\Hy@SectionHShift=\skip282
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/pd1enc.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/url.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
--------------------------------------
--- Note --- for URL encoding within href use the command line option `url-enc'

--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/rotating.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/longtable.4ht
\LT:box=\box76
\LT:ebox=\box77
\tmp:bx=\box78
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
--------------------------------------
--- Note --- for pictorial longtable, use the command line option `pic-longtabl
e'
--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/multirow.4ht (/usr/lo
cal/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/subcaption.4ht (/usr/
local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/caption.4ht (/usr/loc
al/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/minted.4ht
version 2020-09-28-13:52
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/fancyvrb.4ht (/usr/lo
cal/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/framed.4ht
version 2017-04-22-16:03
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
\framed:cnt=\count405
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/float.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/xcolor.4ht
version 2019-04-09-10:06
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/color.4ht) (/usr/local/t
exlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/listings.4ht
version 2020-02-13-13:43
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
--------------------------------------
--- Note --- to ensure proper alignments use fixed size fonts (see listings.dtx
)
--------------------------------------
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/glossaries.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/supertabular.4ht
version 2009-05-21-09:32
(/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
)) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4.4ht
version 2021-03-06-13:31
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/unicode.4ht
version 2021-02-06-14:21
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html4-math.4ht
version 2021-01-30-14:17
) (/usr/local/texlive/2021/texmf-dist/tex/generic/tex4ht/html5.4ht
version 2021-02-14-13:56
))
runsystem(which pygmentize && touch thesis.aex)...disabled (restricted).


! Package minted Error: You must have `pygmentize' installed to use this packag
e.

See the minted package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.2 \begin{document}
                    
Refer to the installation instructions in the minted documentation for more inf
ormation.

(./thesis.aux (./sections/preface.aux) (./sections/introduction.aux) (./section
s/theory.aux) (./sections/detector.aux) (./sections/electronid.aux) (./sections
/rpvthreel.aux) (./sections/conclusion.aux) (./appendices/qft.aux) (./appendice
s/statisticaltreatment.aux) (./appendices/baseline.aux) (./appendices/eventdisp
lays.aux))
\openout1 = `thesis.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for PU/pdf/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
Package hyperref Info: Link coloring ON on input line 2.
LaTeX Info: Redefining \ref on input line 2.
LaTeX Info: Redefining \pageref on input line 2.
Package caption Info: Begin \AtBeginDocument code.
Package caption Info: End \AtBeginDocument code.
(/usr/local/texlive/2021/texmf-dist/tex/latex/base/textcomp.sty
Package: textcomp 2020/02/02 v2.0n Standard LaTeX package
)
\c@lstlisting=\count406
--- file thesis.css ---
) [1







] [1

] [2] [3] [3

] (./sections/acknowledgements.tex) [4

] (./sections/abstract.tex
LaTeX Font Info:    Trying to load font information for U+msa on input line 3.
(/usr/local/texlive/2021/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Trying to load font information for U+msb on input line 3.
(/usr/local/texlive/2021/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)) [5] [6] (./thesis.4ct [7

] [8] [9]) [10] (./thesis.4ct) [11

] (./thesis.4ct [12

] [13]) [14] [15

]
\openout2 = `sections/preface.aux'.

(./sections/preface.tex [16

] [17

]) [18] [19

] [20

] [1

]
\openout2 = `sections/introduction.aux'.

(./sections/introduction.tex [2

]) [3

] [4

]
! Extra \else.
\@include ...ediate \closeout \@partaux \fi \else 
                                                  \deadcycles \z@ \@nameuse ...
l.91 \include{sections/introduction}
                                    
I'm ignoring this; it doesn't match any \if.

[5

]
\openout2 = `sections/theory.aux'.

(./sections/theory.tex [6

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.3 ...k]{Theoretical Framework} \label{ch:theory}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.3 ...k]{Theoretical Framework} \label{ch:theory}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.13 ...tion{Quantum Field Theory} \label{sec:qft}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.13 ...tion{Quantum Field Theory} \label{sec:qft}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/theory/qft.tex) [7

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.16 \section{The Standard Model} \label{sec:sm}
                                                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.16 \section{The Standard Model} \label{sec:sm}
                                                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/theory/sm.tex [8] [9

]
l. 4 --- needs --- figs/theory/Standard_Model_Of_Particle_Physics--Most_Complet
e_Diagram.png ---
[10

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.19 ...ntum Chromodynamics}\label{sec:theory:QCD}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.19 ...ntum Chromodynamics}\label{sec:theory:QCD}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[11

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.28 ...weak Unification}\label{sec:theory:ewkuni}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.28 ...weak Unification}\label{sec:theory:ewkuni}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[12] [13])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.22 \section{Supersymmetry}  \label{sec:susy}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.22 \section{Supersymmetry}  \label{sec:susy}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/theory/susy.tex [14] [15

]
l. 20 --- needs --- figs/theory/SMtoSUSYparticleContent.png ---
[16

] [17

] [18

]
l. 32 --- needs --- figs/theory/HiigsMassLoops.png ---
[19

] [20

] [21

]
l. 42 --- needs --- figs/theory/HiigsMassLoopsSUSY.png ---
[22

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.25 ...ic Standard Model} \label{sec:susybminusl}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.25 ...ic Standard Model} \label{sec:susybminusl}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/theory/susybminusl.tex [23

] [24] [25

]
l. 17 --- needs --- figs/theory/SMtoBLSUSYparticleContent.png ---
[26

] [27

] [28

]
l. 38 --- needs --- figs/theory/ParticlesRPVSUSYpreB-LSB.png ---
[29

] [30

])) [31] [32

]
! Extra \else.
\@include ...ediate \closeout \@partaux \fi \else 
                                                  \deadcycles \z@ \@nameuse ...
l.92 \include{sections/theory}
                              
I'm ignoring this; it doesn't match any \if.

[33

]
\openout2 = `sections/detector.aux'.

(./sections/detector.tex [34

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.4 \label{ch:detector}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.4 \label{ch:detector}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.9 ...ge Hadron Collider}\label{sec:detector:lhc}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.9 ...ge Hadron Collider}\label{sec:detector:lhc}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/detector/lhc.tex [35

] [36

]
l. 14 --- needs --- figs/detector/acccomplex.png ---
[37

] [38

] [39

]
l. 32 --- needs --- figs/detector/dipolecrosssection.png ---
l. 39 --- needs --- figs/detector/dipole.png ---
[40

] [41

] [42

]
l. 50 --- needs --- figs/detector/quadrupole.png ---
[43

] [44

] [45

]
l. 61 --- needs --- figs/detector/beamcross.png ---
[46

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.70 \label{sec:detector:beamsbucketsbunches}
                                             
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.70 \label{sec:detector:beamsbucketsbunches}
                                             
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[47

] [48

]
l. 81 --- needs --- figs/detector/bunch_structure.png ---
[49

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.95 ...section{Pileup}\label{sec:detector:pileup}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.95 ...section{Pileup}\label{sec:detector:pileup}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[50

] [51

]
l. 102 --- needs --- figs/detector/pileupprofile.png ---
[52

] [53

] [54

]
l. 114 --- needs --- figs/detector/pileup25.png ---
[55

] [56

] [57

]
l. 124 --- needs --- figs/detector/pileup65.png ---
[58

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.12 ... ATLAS Detector}\label{sec:detector:atlas}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.12 ... ATLAS Detector}\label{sec:detector:atlas}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/detector/atlas.tex [59

] [60

]
l. 17 --- needs --- figs/detector/atlas.png ---
[61

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.15 ...The Inner Detector}\label{sec:detector:id}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.15 ...The Inner Detector}\label{sec:detector:id}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/detector/innerdetector.tex [62

] [63

]
l. 7 --- needs --- figs/detector/ID.png ---
[64

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.15 ...bsection{Pixel Detector} \label{sec:pixel}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.15 ...bsection{Pixel Detector} \label{sec:pixel}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.22 ...ion{Semiconductor Tracker} \label{sec:sct}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.22 ...ion{Semiconductor Tracker} \label{sec:sct}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.29 ...nsition Radiation Tracker} \label{sec:trt}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.29 ...nsition Radiation Tracker} \label{sec:trt}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[65

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.18 ...rimeters}\label{sec:detector:calorimeters}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.18 ...rimeters}\label{sec:detector:calorimeters}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/detector/calorimeters.tex [66] [67

]
l. 6 --- needs --- figs/detector/Cut-away-view-of-the-ATLAS-calorimeters-The-LA
r-calorimeters-are-seen-inside-the.png ---
[68

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.14 \label{sec:lar}
                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.14 \label{sec:lar}
                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[69

] [70

]
l. 24 --- needs --- figs/detector/LAR.png ---
[71

] [72

] [73] [74

]
l. 55 --- needs --- figs/detector/tilecal.png ---
[75

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.21 ...Spectrometer}\label{sec:detector:muonspec}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.21 ...Spectrometer}\label{sec:detector:muonspec}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/detector/muonspec.tex [76

] [77

]
l. 24 --- needs --- figs/detector/MuonSpec1.png ---
l. 24 --- needs --- figs/detector/MuonSpec2.png ---
[78

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.24 ...dentification}\label{sec:detector:objects}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.24 ...dentification}\label{sec:detector:objects}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/detector/objects.tex [79

] [80

]
l. 11 --- needs --- figs/detector/ObjeRecoDefenseVersion.png ---
[81

] [82

]) [83]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.27 ...rigger System}\label{sec:detector:trigger}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.27 ...rigger System}\label{sec:detector:trigger}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/detector/trigger.tex [84] [85

]
l. 29 --- needs --- figs/detector/L1rate.png ---
l. 29 --- needs --- figs/detector/HLTrate_2018.png ---
[86

])) [87

] [88

]
! Extra \else.
\@include ...ediate \closeout \@partaux \fi \else 
                                                  \deadcycles \z@ \@nameuse ...
l.93 \include{sections/detector}
                                
I'm ignoring this; it doesn't match any \if.

[89

]
\openout2 = `sections/electronid.aux'.

(./sections/electronid.tex [90

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.4 \label{ch:electronid}
                         
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.4 \label{ch:electronid}
                         
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.11 ...iency Measurements}\label{sec:electroneff}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.11 ...iency Measurements}\label{sec:electroneff}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/electronid/electroneff.tex) [91

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.14 ...Reconstruction}\label{sec:electroncluster}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.14 ...Reconstruction}\label{sec:electroncluster}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/electronid/electroncluster.tex)
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.17 ...te Reconstruction}\label{sec:electronreco}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.17 ...te Reconstruction}\label{sec:electronreco}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/electronid/electronreco.tex [92] [93

]
l. 6 --- needs --- figs/egamma/egammaCodeFlow.png ---
[94

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.31 ...erclusters}\label{sec:egamma:supercluster}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.31 ...erclusters}\label{sec:egamma:supercluster}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[95

] [96] [97

]
l. 41 --- needs --- figs/egamma/superclusters.png ---
[98

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.78 ...track re-fit}\label{sec:egamma:trackrefit}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.78 ...track re-fit}\label{sec:egamma:trackrefit}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[99

] [100] [101

]
l. 112 --- needs --- figs/egamma/qd0.png ---
l. 119 --- needs --- figs/egamma/qoverpGSF.png ---
[102

] [103

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.20 ...tron Identification}\label{sec:electronid}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.20 ...tron Identification}\label{sec:electronid}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/electronid/electronid.tex [104] [105] [106

]
l. 9 --- needs --- figs/egamma/electron_variables.png ---
[107

]
LaTeX Font Info:    Trying to load font information for OMS+cmr on input line 1
8.
(/usr/local/texlive/2021/texmf-dist/tex/latex/base/omscmr.fd
File: omscmr.fd 2019/12/16 v2.5j Standard LaTeX font definitions
)
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <10> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 18.
[108

] [109] [110

]
l. 54 --- needs --- figs/egamma/example_lh_output.png ---
l. 61 --- needs --- figs/egamma/ROC.png ---
[111

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.76 \label{sec:egamma:calvars}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.76 \label{sec:egamma:calvars}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[112

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.103 \label{sec:egamma:trackvars}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.103 \label{sec:egamma:trackvars}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[113]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.126 \label{sec:egamma:trackcalvars}
                                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.126 \label{sec:egamma:trackcalvars}
                                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.133 \label{sec:egamma:nonLHvars}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.133 \label{sec:egamma:nonLHvars}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[114] [115

] [116

] [117

] [118

]
l. 254 --- needs --- figs/egamma/R_had1.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.255     \label{fig:egamma:Rhad1}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.255     \label{fig:egamma:Rhad1}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.255     \label{fig:egamma:Rhad1}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.255     \label{fig:egamma:Rhad1}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.255     \label{fig:egamma:Rhad1}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.255     \label{fig:egamma:Rhad1}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 260 --- needs --- figs/egamma/f3.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.261     \label{fig:egamma:f3}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.261     \label{fig:egamma:f3}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.261     \label{fig:egamma:f3}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.261     \label{fig:egamma:f3}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.261     \label{fig:egamma:f3}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.261     \label{fig:egamma:f3}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 266 --- needs --- figs/egamma/f1.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.267     \label{fig:egamma:f1}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.267     \label{fig:egamma:f1}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.267     \label{fig:egamma:f1}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.267     \label{fig:egamma:f1}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.267     \label{fig:egamma:f1}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.267     \label{fig:egamma:f1}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[119

] [120

] [121

]
l. 285 --- needs --- figs/egamma/w_eta2.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.286     \label{fig:egamma:weta2}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.286     \label{fig:egamma:weta2}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.286     \label{fig:egamma:weta2}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.286     \label{fig:egamma:weta2}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.286     \label{fig:egamma:weta2}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.286     \label{fig:egamma:weta2}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 291 --- needs --- figs/egamma/R_phi.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.292     \label{fig:egamma:Rphi}
                                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.292     \label{fig:egamma:Rphi}
                                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.292     \label{fig:egamma:Rphi}
                                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.292     \label{fig:egamma:Rphi}
                                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.292     \label{fig:egamma:Rphi}
                                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.292     \label{fig:egamma:Rphi}
                                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 297 --- needs --- figs/egamma/R_eta.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.298     \label{fig:egamma:Reta}
                                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.298     \label{fig:egamma:Reta}
                                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.298     \label{fig:egamma:Reta}
                                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.298     \label{fig:egamma:Reta}
                                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.298     \label{fig:egamma:Reta}
                                 
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.298     \label{fig:egamma:Reta}
                                 
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 303 --- needs --- figs/egamma/E_ratio.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.304     \label{fig:egamma:Eratio}
                                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.304     \label{fig:egamma:Eratio}
                                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.304     \label{fig:egamma:Eratio}
                                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.304     \label{fig:egamma:Eratio}
                                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.304     \label{fig:egamma:Eratio}
                                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.304     \label{fig:egamma:Eratio}
                                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[122

] [123

] [124

]
l. 324 --- needs --- figs/egamma/d0_sig.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.325     \label{fig:egamma:d0_sig}
                                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.325     \label{fig:egamma:d0_sig}
                                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.325     \label{fig:egamma:d0_sig}
                                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.325     \label{fig:egamma:d0_sig}
                                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.325     \label{fig:egamma:d0_sig}
                                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.325     \label{fig:egamma:d0_sig}
                                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 330 --- needs --- figs/egamma/delatPoverp.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.331     \label{fig:egamma:deltaPoverp}
                                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.331     \label{fig:egamma:deltaPoverp}
                                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.331     \label{fig:egamma:deltaPoverp}
                                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.331     \label{fig:egamma:deltaPoverp}
                                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.331     \label{fig:egamma:deltaPoverp}
                                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.331     \label{fig:egamma:deltaPoverp}
                                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 336 --- needs --- figs/egamma/eProbHT.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.337     \label{fig:egamma:eProbHT}
                                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.337     \label{fig:egamma:eProbHT}
                                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.337     \label{fig:egamma:eProbHT}
                                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.337     \label{fig:egamma:eProbHT}
                                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.337     \label{fig:egamma:eProbHT}
                                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.337     \label{fig:egamma:eProbHT}
                                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 342 --- needs --- figs/egamma/deltaEta_1.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.343     \label{fig:egamma:deltaEta_1}
                                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.343     \label{fig:egamma:deltaEta_1}
                                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.343     \label{fig:egamma:deltaEta_1}
                                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.343     \label{fig:egamma:deltaEta_1}
                                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.343     \label{fig:egamma:deltaEta_1}
                                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.343     \label{fig:egamma:deltaEta_1}
                                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 348 --- needs --- figs/egamma/deltaPhi_res.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.349     \label{fig:egamma:deltaPhi_res}
                                         
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.349     \label{fig:egamma:deltaPhi_res}
                                         
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.349     \label{fig:egamma:deltaPhi_res}
                                         
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.349     \label{fig:egamma:deltaPhi_res}
                                         
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.349     \label{fig:egamma:deltaPhi_res}
                                         
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.349     \label{fig:egamma:deltaPhi_res}
                                         
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[125

] [126

] [127

]
l. 364 --- needs --- figs/egamma/TRTGasConfig.png ---
[128

] [129

] [130

] [131

] [132

] [133

] [134

] [135

] [136

]
! Argument of \AltMathOne has an extra }.
<inserted text> 
                \par 
l.580 ...Binning in $E_{\mathrm{T}}$ and \(\eta\)}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
\leavevmode \st:math \eta \)
! Paragraph ended before \AltMathOne was complete.
<to be read again> 
                   \par 
l.580 ...Binning in $E_{\mathrm{T}}$ and \(\eta\)}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.581 \label{sec:egamma:pdfbinning}
                                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.581 \label{sec:egamma:pdfbinning}
                                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[137

] [138

] [139

] [140

] [141

] [142

] [143

] [144

]
l. 621 --- needs --- figs/egamma/LHpdfEtaBinning.png ---
[145

] [146

] [147

]
l. 646 --- needs --- figs/egamma/KDEMethod.png ---
l. 653 --- needs --- figs/egamma/new_kde_example.png ---
[148

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.669 \label{sec:egamma:pileup}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.669 \label{sec:egamma:pileup}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[149

] [150

]
l. 681 --- needs --- figs/egamma/rhad_hilomu.png ---
l. 688 --- needs --- figs/egamma/rphi_hilomu.png ---
[151

] [152

] [153

]
l. 699 --- needs --- figs/egamma/nminus1_plot.png ---
[154

] [155

] [156

]
l. 721 --- needs --- figs/egamma/nvtxdepSignal.png ---
l. 728 --- needs --- figs/egamma/nvtxdepBackground.png ---
[157

] [158

] [159

]
l. 747 --- needs --- figs/egamma/equiEfficiency.png ---
l. 754 --- needs --- figs/egamma/nvtx.png ---
[160

] [161

] [162

]
l. 779 --- needs --- figs/egamma/pileupCorrection.png ---
[163

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.808 ... Occupancy}\label{sec:egamma:TRTTrackOcc}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.808 ... Occupancy}\label{sec:egamma:TRTTrackOcc}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[164

] [165

]
l. 830 --- needs --- figs/egamma/TRTLocalTrackOcc.png ---
[166

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.847 ...the Electron LH}\label{sec:egamma:tuning}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.847 ...the Electron LH}\label{sec:egamma:tuning}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[167

] [168] [169

]
l. 861 --- needs --- figs/egamma/f3_DataVSMC.png ---
l. 867 --- needs --- figs/egamma/R_had_DataVsMC.png ---
[170

] [171

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.907 ...r Electron LH} \label{sec:egamma:trigger}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.907 ...r Electron LH} \label{sec:egamma:trigger}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[172]
l. 942 --- needs --- figs/egamma/trig_eProb_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.943     \label{fig:egamma:trig_eProbHT}
                                         
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.943     \label{fig:egamma:trig_eProbHT}
                                         
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.943     \label{fig:egamma:trig_eProbHT}
                                         
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.943     \label{fig:egamma:trig_eProbHT}
                                         
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.943     \label{fig:egamma:trig_eProbHT}
                                         
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.943     \label{fig:egamma:trig_eProbHT}
                                         
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 948 --- needs --- figs/egamma/trig_deltaeta_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.949     \label{fig:egamma:trig_deltaEta_1}
                                            
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.949     \label{fig:egamma:trig_deltaEta_1}
                                            
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.949     \label{fig:egamma:trig_deltaEta_1}
                                            
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.949     \label{fig:egamma:trig_deltaEta_1}
                                            
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.949     \label{fig:egamma:trig_deltaEta_1}
                                            
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.949     \label{fig:egamma:trig_deltaEta_1}
                                            
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 954 --- needs --- figs/egamma/trig_deltaphi_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.955     \label{fig:egamma:trig_deltaPhi_res}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.955     \label{fig:egamma:trig_deltaPhi_res}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.955     \label{fig:egamma:trig_deltaPhi_res}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.955     \label{fig:egamma:trig_deltaPhi_res}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.955     \label{fig:egamma:trig_deltaPhi_res}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.955     \label{fig:egamma:trig_deltaPhi_res}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 960 --- needs --- figs/egamma/trig_weta2_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.961     \label{fig:egamma:trig_weta2}
                                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.961     \label{fig:egamma:trig_weta2}
                                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.961     \label{fig:egamma:trig_weta2}
                                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.961     \label{fig:egamma:trig_weta2}
                                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.961     \label{fig:egamma:trig_weta2}
                                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.961     \label{fig:egamma:trig_weta2}
                                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 965 --- needs --- figs/egamma/trig_rhad_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.966     \label{fig:egamma:trig_rhad}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.966     \label{fig:egamma:trig_rhad}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.966     \label{fig:egamma:trig_rhad}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.966     \label{fig:egamma:trig_rhad}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.966     \label{fig:egamma:trig_rhad}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.966     \label{fig:egamma:trig_rhad}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 971 --- needs --- figs/egamma/trig_reta_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.972     \label{fig:egamma:trig_reta}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.972     \label{fig:egamma:trig_reta}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.972     \label{fig:egamma:trig_reta}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.972     \label{fig:egamma:trig_reta}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.972     \label{fig:egamma:trig_reta}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.972     \label{fig:egamma:trig_reta}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[173] [174] [175

]
l. 987 --- needs --- figs/egamma/trig_rphi_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.988     \label{fig:egamma:trig_rphi}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.988     \label{fig:egamma:trig_rphi}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.988     \label{fig:egamma:trig_rphi}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.988     \label{fig:egamma:trig_rphi}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.988     \label{fig:egamma:trig_rphi}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.988     \label{fig:egamma:trig_rphi}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 993 --- needs --- figs/egamma/trig_eratio_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.994     \label{fig:egamma:trig_eratio}
                                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.994     \label{fig:egamma:trig_eratio}
                                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.994     \label{fig:egamma:trig_eratio}
                                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.994     \label{fig:egamma:trig_eratio}
                                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.994     \label{fig:egamma:trig_eratio}
                                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.994     \label{fig:egamma:trig_eratio}
                                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 999 --- needs --- figs/egamma/trig_f1_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1000     \label{fig:egamma:trig_f1}
                                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1000     \label{fig:egamma:trig_f1}
                                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1000     \label{fig:egamma:trig_f1}
                                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1000     \label{fig:egamma:trig_f1}
                                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1000     \label{fig:egamma:trig_f1}
                                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1000     \label{fig:egamma:trig_f1}
                                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1005 --- needs --- figs/egamma/trig_f3_highet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1006     \label{fig:egamma:trig_f3}
                                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1006     \label{fig:egamma:trig_f3}
                                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1006     \label{fig:egamma:trig_f3}
                                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1006     \label{fig:egamma:trig_f3}
                                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1006     \label{fig:egamma:trig_f3}
                                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1006     \label{fig:egamma:trig_f3}
                                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[176

] [177

] [178

]
l. 1022 --- needs --- figs/egamma/trig_eProb_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1023     \label{fig:egamma:trig_eProbHT_lowet}
                                                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1023     \label{fig:egamma:trig_eProbHT_lowet}
                                                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1023     \label{fig:egamma:trig_eProbHT_lowet}
                                                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1023     \label{fig:egamma:trig_eProbHT_lowet}
                                                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1023     \label{fig:egamma:trig_eProbHT_lowet}
                                                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1023     \label{fig:egamma:trig_eProbHT_lowet}
                                                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1028 --- needs --- figs/egamma/trig_deltaeta_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1029 ...\label{fig:egamma:trig_deltaEta_1_lowet}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1029 ...\label{fig:egamma:trig_deltaEta_1_lowet}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1029 ...\label{fig:egamma:trig_deltaEta_1_lowet}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1029 ...\label{fig:egamma:trig_deltaEta_1_lowet}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1029 ...\label{fig:egamma:trig_deltaEta_1_lowet}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1029 ...\label{fig:egamma:trig_deltaEta_1_lowet}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1034 --- needs --- figs/egamma/trig_deltaphi_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1035 ...abel{fig:egamma:trig_deltaPhi_res_lowet}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1035 ...abel{fig:egamma:trig_deltaPhi_res_lowet}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1035 ...abel{fig:egamma:trig_deltaPhi_res_lowet}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1035 ...abel{fig:egamma:trig_deltaPhi_res_lowet}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1035 ...abel{fig:egamma:trig_deltaPhi_res_lowet}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1035 ...abel{fig:egamma:trig_deltaPhi_res_lowet}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1040 --- needs --- figs/egamma/trig_weta2_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1041     \label{fig:egamma:trig_weta2_lowet}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1041     \label{fig:egamma:trig_weta2_lowet}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1041     \label{fig:egamma:trig_weta2_lowet}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1041     \label{fig:egamma:trig_weta2_lowet}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1041     \label{fig:egamma:trig_weta2_lowet}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1041     \label{fig:egamma:trig_weta2_lowet}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1045 --- needs --- figs/egamma/trig_rhad_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1046     \label{fig:egamma:trig_rhad_lowet}
                                             
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1046     \label{fig:egamma:trig_rhad_lowet}
                                             
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1046     \label{fig:egamma:trig_rhad_lowet}
                                             
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1046     \label{fig:egamma:trig_rhad_lowet}
                                             
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1046     \label{fig:egamma:trig_rhad_lowet}
                                             
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1046     \label{fig:egamma:trig_rhad_lowet}
                                             
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1051 --- needs --- figs/egamma/trig_reta_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1052     \label{fig:egamma:trig_reta_lowet}
                                             
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1052     \label{fig:egamma:trig_reta_lowet}
                                             
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1052     \label{fig:egamma:trig_reta_lowet}
                                             
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1052     \label{fig:egamma:trig_reta_lowet}
                                             
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1052     \label{fig:egamma:trig_reta_lowet}
                                             
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1052     \label{fig:egamma:trig_reta_lowet}
                                             
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[179

] [180

] [181

]
l. 1067 --- needs --- figs/egamma/trig_rphi_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1068     \label{fig:egamma:trig_rph_lowet}
                                            
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1068     \label{fig:egamma:trig_rph_lowet}
                                            
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1068     \label{fig:egamma:trig_rph_lowet}
                                            
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1068     \label{fig:egamma:trig_rph_lowet}
                                            
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1068     \label{fig:egamma:trig_rph_lowet}
                                            
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1068     \label{fig:egamma:trig_rph_lowet}
                                            
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1073 --- needs --- figs/egamma/trig_eratio_lowEt.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1074     \label{fig:egamma:trig_eratio_lowet}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1074     \label{fig:egamma:trig_eratio_lowet}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1074     \label{fig:egamma:trig_eratio_lowet}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1074     \label{fig:egamma:trig_eratio_lowet}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1074     \label{fig:egamma:trig_eratio_lowet}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1074     \label{fig:egamma:trig_eratio_lowet}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1079 --- needs --- figs/egamma/trig_f1_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1080     \label{fig:egamma:trig_f1_lowet}
                                           
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1080     \label{fig:egamma:trig_f1_lowet}
                                           
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1080     \label{fig:egamma:trig_f1_lowet}
                                           
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1080     \label{fig:egamma:trig_f1_lowet}
                                           
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1080     \label{fig:egamma:trig_f1_lowet}
                                           
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1080     \label{fig:egamma:trig_f1_lowet}
                                           
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1085 --- needs --- figs/egamma/trig_f3_lowet.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1086     \label{fig:egamma:trig_f3_lowet}
                                           
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1086     \label{fig:egamma:trig_f3_lowet}
                                           
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1086     \label{fig:egamma:trig_f3_lowet}
                                           
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1086     \label{fig:egamma:trig_f3_lowet}
                                           
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1086     \label{fig:egamma:trig_f3_lowet}
                                           
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1086     \label{fig:egamma:trig_f3_lowet}
                                           
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[182

] [183

] [184

] [185

] [186

] [187

]
l. 1143 --- needs --- figs/egamma/trig_eff_lhtight.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1144     \label{fig:egamma:trig_eff_lhtight}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1144     \label{fig:egamma:trig_eff_lhtight}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1144     \label{fig:egamma:trig_eff_lhtight}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1144     \label{fig:egamma:trig_eff_lhtight}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1144     \label{fig:egamma:trig_eff_lhtight}
                                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1144     \label{fig:egamma:trig_eff_lhtight}
                                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1148 --- needs --- figs/egamma/trig_eff_lhmedium.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1149     \label{fig:egamma:trig_eff_lhmedium}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1149     \label{fig:egamma:trig_eff_lhmedium}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1149     \label{fig:egamma:trig_eff_lhmedium}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1149     \label{fig:egamma:trig_eff_lhmedium}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1149     \label{fig:egamma:trig_eff_lhmedium}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1149     \label{fig:egamma:trig_eff_lhmedium}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

l. 1153 --- needs --- figs/egamma/trig_eff_lhvloose.png ---
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1154     \label{fig:egamma:trig_eff_lhvloose}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1154     \label{fig:egamma:trig_eff_lhvloose}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1154     \label{fig:egamma:trig_eff_lhvloose}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1154     \label{fig:egamma:trig_eff_lhvloose}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.1154     \label{fig:egamma:trig_eff_lhvloose}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.1154     \label{fig:egamma:trig_eff_lhvloose}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[188

])) [189

] [190

]
! Extra \else.
\@include ...ediate \closeout \@partaux \fi \else 
                                                  \deadcycles \z@ \@nameuse ...
l.94 \include{sections/electronid}
                                  
I'm ignoring this; it doesn't match any \if.

[191

]
\openout2 = `sections/rpvthreel.aux'.

(./sections/rpvthreel.tex [192

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.4 \label{ch:rpvthreel}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.4 \label{ch:rpvthreel}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.6 ...nalysis Introduction}\label{sec:motivation}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.6 ...nalysis Introduction}\label{sec:motivation}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/rpvthreel/introduction.tex [193

] [194

]
l. 10 --- needs --- figs/rpvthreel/fig_01b.png ---
l. 17 --- needs --- figs/rpvthreel/fig_01b.png ---
[195

] [196

] [197

]
l. 35 --- needs --- figs/rpvthreel/statthrows.png ---
[198

] [199

] [200

]
l. 45 --- needs --- figs/rpvthreel/LSPprobability.png ---
[201

] [202

] [203

]
l. 53 --- needs --- figs/rpvthreel/xsec10_13_SM.png ---
[204

] [205

] [206] [207

]
l. 104 --- needs --- figs/rpvthreel/MassDegenerateChipm.png ---
l. 111 --- needs --- figs/rpvthreel/MassDegenerateChi0.png ---
[208

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.9 ...tion{Analysis Strategy}\label{sec:strategy}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.9 ...tion{Analysis Strategy}\label{sec:strategy}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/rpvthreel/strategy.tex
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.12 \label{sec:strategy:signal}
                                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.12 \label{sec:strategy:signal}
                                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[209

] [210] [211

] [212

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.77 \label{sec:strategy:background}
                                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.77 \label{sec:strategy:background}
                                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[213

] [214

]
l. 91 --- needs --- figs/rpvthreel/SMcrossSections.png ---
[215

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.12 ...ata: Monte Carlo Generation}\label{sec:MC}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.12 ...ata: Monte Carlo Generation}\label{sec:MC}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/rpvthreel/MC.tex [216

] [217] [218

] [219

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.15 \section{Analysis Regions}\label{sec:regions}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.15 \section{Analysis Regions}\label{sec:regions}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/rpvthreel/regions.tex [220

] [221] [222

]
l. 18 --- needs --- figs/rpvthreel/3LRPVSchematic.png ---
[223

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.27 \label{sec:srthree}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.27 \label{sec:srthree}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[224

] [225] [226

]
l. 77 --- needs --- figs/rpvthreel/MC_Acc_MassvsProcess_SROL3l_emutau.png ---
[227

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.85 \label{sec:srfr}
                     
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.85 \label{sec:srfr}
                     
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[228

] [229

]
l. 104 --- needs --- figs/rpvthreel/MC_Acc_MassvsProcess_SRTL_emutau.png ---
[230

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.112 \label{sec:srfour}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.112 \label{sec:srfour}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[231

] [232

]
l. 126 --- needs --- figs/rpvthreel/MC_Acc_MassvsProcess_SROL4l_emutau.png ---
[233

] [234

] [235

]
l. 140 --- needs --- figs/rpvthreel/bkgYields_SROL3l_noCuts.png ---
l. 147 --- needs --- figs/rpvthreel/bkgYields_SRTL_noCuts.png ---
l. 154 --- needs --- figs/rpvthreel/bkgYields_SROL4l_noCuts.png ---
[236

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.179 \label{sec:fakes}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.179 \label{sec:fakes}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[237

]
LaTeX Font Info:    Font shape `OMS/cmr/m/n' in size <9> not available
(Font)              Font shape `OMS/cmsy/m/n' tried instead on input line 200.
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.228 \label{sec:crwz}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.228 \label{sec:crwz}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[238] [239] [240

]
l. 247 --- needs --- figs/rpvthreel/3lregions.png ---
[241

] [242

] [243

]
l. 260 --- needs --- figs/rpvthreel/CRWZ_yields.png ---
l. 267 --- needs --- figs/rpvthreel/VRMet_yields.png ---
l. 274 --- needs --- figs/rpvthreel/VRmTmin_yields.png ---
[244

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.287 \label{sec:crzz}
                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.287 \label{sec:crzz}
                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[245

] [246

]
l. 303 --- needs --- figs/rpvthreel/4lregions.png ---
[247

] [248

] [249

]
l. 315 --- needs --- figs/rpvthreel/CRZZ_yields.png ---
l. 322 --- needs --- figs/rpvthreel/VRZZ_yields.png ---
[250

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.332 \label{sec:crttz}
                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.332 \label{sec:crttz}
                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[251

] [252

]
l. 350 --- needs --- figs/rpvthreel/dRbb_PreSel_logy_incl.png ---
l. 357 --- needs --- figs/rpvthreel/dRbb_PreSel.png ---
[253

] [254

] [255

]
l. 368 --- needs --- figs/rpvthreel/CRttZ_yields.png ---
l. 375 --- needs --- figs/rpvthreel/VRttZ_yields.png ---
[256

] [257

] [258

] [259

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.18 ...on{Statistical Treatment}\label{sec:stats}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.18 ...on{Statistical Treatment}\label{sec:stats}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/rpvthreel/statisticalanalysis.tex [260

] [261

]
l. 7 --- needs --- figs/rpvthreel/systsflat_dist_SRTL.png ---
l. 14 --- needs --- figs/rpvthreel/systsflat_dist_SROL4l.png ---
l. 21 --- needs --- figs/rpvthreel/systsflat_dist_SROL3l.png ---
[262

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.33 \label{sec:stats:systs}
                            
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.33 \label{sec:stats:systs}
                            
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.47 \label{sec:stats:systs:MCstats}
                                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.47 \label{sec:stats:systs:MCstats}
                                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.51 \label{sec:stats:systs:exp}
                                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.51 \label{sec:stats:systs:exp}
                                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[263

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.65 \label{sec:stats:systs:theory}
                                   
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.65 \label{sec:stats:systs:theory}
                                   
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[264]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.85 \label{sec:stats:systs:fakes}
                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.85 \label{sec:stats:systs:fakes}
                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.93 \label{sec:stats:systs:normalization}
                                          
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.93 \label{sec:stats:systs:normalization}
                                          
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[265]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.110 \label{sec:stats:bkgonly}
                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.110 \label{sec:stats:bkgonly}
                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[266] [267

] [268

] [269

] [270

]
l. 145 --- needs --- figs/rpvthreel/CRWZ_Nm1_mTmin_logy.png ---
l. 152 --- needs --- figs/rpvthreel/CRWZ_Nm1_met_logy.png ---
l. 159 --- needs --- figs/rpvthreel/VRMet_met_logy.png ---
l. 166 --- needs --- figs/rpvthreel/CRZZ_Nm1_m_allLeptonicZs_1_logy.png ---
l. 173 --- needs --- figs/rpvthreel/CRttZ_Nm1_mydRbb.png ---
[271

] [272

] [273

]
l. 183 --- needs --- figs/rpvthreel/histpull_all_doSRsInBkg_CRVR.png ---
[274

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.192 \label{sec:stats:modind}
                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.192 \label{sec:stats:modind}
                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.198 \label{sec:stats:moddep}
                              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.198 \label{sec:stats:moddep}
                              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

)
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.21 \section{Results}\label{sec:results}
                                         
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.21 \section{Results}\label{sec:results}
                                         
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/rpvthreel/results.tex [275

] [276] [277

] (./figs/rpvthreel/yieldsTable_Combined.tex) [278

] [279] [280

] [281

]
l. 50 --- needs --- figs/rpvthreel/histpull_all_doSRsInBkg_SROL3l.png ---
l. 57 --- needs --- figs/rpvthreel/histpull_all_doSRsInBkg_SROL4l.png ---
l. 64 --- needs --- figs/rpvthreel/histpull_all_doSRsInBkg_SRTL.png ---
[282

] [283

] [284

]
l. 91 --- needs --- figs/rpvthreel/contours_bre_33_brm_33_brt_33_Nominal.png --
-
l. 98 --- needs --- figs/rpvthreel/contours_bre_100_brm_0_brt_0_Nominal.png ---

l. 105 --- needs --- figs/rpvthreel/contours_bre_0_brm_100_brt_0_Nominal.png --
-
l. 111 --- needs --- figs/rpvthreel/contours_bre_0_brm_0_brt_100_Nominal.png --
-
[285

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.125 \label{sec:BRscan}
                        
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.125 \label{sec:BRscan}
                        
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[286

] [287] [288

]
l. 154 --- needs --- figs/rpvthreel/triangleLimits_bre_33_brm_33_brt_33_mass_60
0.png ---
l. 161 --- needs --- figs/rpvthreel/triangleLimits_bre_100_brm_0_brt_0_mass_600
.png ---
l. 168 --- needs --- figs/rpvthreel/triangleLimits_bre_0_brm_100_brt_0_mass_600
.png ---
l. 174 --- needs --- figs/rpvthreel/triangleLimits_bre_0_brm_0_brt_100_mass_600
.png ---
[289

])
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.24 ...s" Button}\label{sec:analysispreservation}
                                                  
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.24 ...s" Button}\label{sec:analysispreservation}
                                                  
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

(./sections/rpvthreel/analysispreservation.tex [290

] (/usr/local/texlive/2021/texmf-dist/tex/latex/listings/lstlang1.sty
File: lstlang1.sty 2020/03/24 1.8d listings language file
) (/usr/local/texlive/2021/texmf-dist/tex/latex/listings/lstlang1.sty
File: lstlang1.sty 2020/03/24 1.8d listings language file
) [291]
LaTeX Font Info:    Trying to load font information for TS1+cmtt on input line 
78.
(/usr/local/texlive/2021/texmf-dist/tex/latex/base/ts1cmtt.fd
File: ts1cmtt.fd 2019/12/16 v2.5j Standard LaTeX font definitions
) [292] [293

]
l. 148 --- needs --- figs/rpvthreel/yadage_workflow_instance.png ---
[294

])) [295

] [296

]
! Extra \else.
\@include ...ediate \closeout \@partaux \fi \else 
                                                  \deadcycles \z@ \@nameuse ...
l.95 \include{sections/rpvthreel}
                                 
I'm ignoring this; it doesn't match any \if.

[297

]
\openout2 = `sections/conclusion.aux'.

(./sections/conclusion.tex [298

]) [299

] [300

]
! Extra \else.
\@include ...ediate \closeout \@partaux \fi \else 
                                                  \deadcycles \z@ \@nameuse ...
l.96 \include{sections/conclusion}
                                  
I'm ignoring this; it doesn't match any \if.

[301

] [302

] [303]
\openout2 = `appendices/qft.aux'.

(./appendices/qft.tex [304

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.3 \section{Formulation of QFT}\label{app:qft}
                                               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.3 \section{Formulation of QFT}\label{app:qft}
                                               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[305

]) [306] [307

] [308

]
\openout2 = `appendices/statisticaltreatment.aux'.

(./appendices/statisticaltreatment.tex [309

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.2 \label{app:statisticaltreatment}
                                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.2 \label{app:statisticaltreatment}
                                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[310

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.45 \label{sec:stats:MLE}
                          
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.45 \label{sec:stats:MLE}
                          
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.49 \label{sec:stats:ProfileLiklihood}
                                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.49 \label{sec:stats:ProfileLiklihood}
                                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[311] [312

]
l. 57 --- needs --- figs/rpvthreel/LikelihoodProfileCartoon.png ---
[313

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.65 \label{sec:stats:LikelihoodRatio}
                                      
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.65 \label{sec:stats:LikelihoodRatio}
                                      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[314

] [315

]
l. 98 --- needs --- figs/rpvthreel/teststatdistpvalue.png ---
[316

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.124 \label{sec:stats:CLs}
                           
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.124 \label{sec:stats:CLs}
                           
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[317

]) [318] [319

]
! Extra \else.
\@include ...ediate \closeout \@partaux \fi \else 
                                                  \deadcycles \z@ \@nameuse ...
l.105 \include{appendices/statisticaltreatment}
                                               
I'm ignoring this; it doesn't match any \if.

[320

]
\openout2 = `appendices/baseline.aux'.

(./appendices/baseline.tex [321

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.2 \label{app:baselineobjectselection}
                                       
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.2 \label{app:baselineobjectselection}
                                       
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[322

] [323

] [324

] [325

] [326

] [327

] [328

] [329

] [330

] [331

]
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.116 \label{sec:overlapRemoval}
                                
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.116 \label{sec:overlapRemoval}
                                
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[332]) [333]
\openout2 = `appendices/eventdisplays.aux'.

(./appendices/eventdisplays.tex
! Argument of \strip@prefix has an extra }.
<inserted text> 
                \par 
l.2 \label{app:eventdisplays}
                             
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
undefined
! Paragraph ended before \strip@prefix was complete.
<to be read again> 
                   \par 
l.2 \label{app:eventdisplays}
                             
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

[334




] [335

]
l. 5 --- needs --- figs/rpvthreel/SRFR.png ---
[336

] [337

] [338

]
l. 19 --- needs --- figs/rpvthreel/SR4l.png ---
[339

] [340

] [341

]
l. 31 --- needs --- figs/rpvthreel/SR3l.png ---
[342

]) [343

] [344

] [345

] (./thesis.bbl (./thesis.brf)
\tf@brf=\write8
\openout8 = `thesis.brf'.

[346

]
bibitemlist
[347

] [348] [349] [350] [351] [352] [353] [354] [355] [356] [357] [358] [359] [360]
[361] [362] [363] [364] [365] [366] [367] [368] [369] [370] [371] [372] [373] [
374] [375] [376] [377] [378] [379] [380] [381]

LaTeX Font Warning: Font shape `OT1/cmr/m/scit' undefined
(Font)              using `OT1/cmr/m/sc' instead on input line 402.

[382] [383]

LaTeX Font Warning: Font shape `OT1/cmr/m/scit' undefined
(Font)              using `OT1/cmr/m/sc' instead on input line 422.

[384] [385] [386] [387] [388] [389] [390] [391] [392] [393] [394] [395] [396])
No file thesis.gls.
[397] [398] [399

] (./thesis.aux (./sections/preface.aux) (./sections/introduction.aux) (./secti
ons/theory.aux) (./sections/detector.aux) (./sections/electronid.aux) (./sectio
ns/rpvthreel.aux) (./sections/conclusion.aux) (./appendices/qft.aux) (./appendi
ces/statisticaltreatment.aux) (./appendices/baseline.aux) (./appendices/eventdi
splays.aux))

LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right.

Package rerunfilecheck Info: File `thesis.brf' has not changed.
(rerunfilecheck)             Checksum: D41D8CD98F00B204E9800998ECF8427E;0.
 )
(\end occurred when \ifx on line 54 was incomplete)
(\end occurred when \ifx on line 42 was incomplete)
(\end occurred when \ifx on line 42 was incomplete)
(\end occurred when \ifx on line 38 was incomplete)
(\end occurred when \ifx on line 38 was incomplete)
(\end occurred when \ifx on line 12 was incomplete)
(\end occurred when \iftrue on line 105 was incomplete)
(\end occurred when \ifnum on line 105 was incomplete)
(\end occurred when \ifx on line 8 was incomplete)
(\end occurred when \ifx on line 5 was incomplete)
(\end occurred when \iftrue on line 96 was incomplete)
(\end occurred when \ifnum on line 96 was incomplete)
(\end occurred when \ifx on line 148 was incomplete)
(\end occurred when \ifx on line 148 was incomplete)
(\end occurred when \ifx on line 146 was incomplete)
(\end occurred when \ifx on line 146 was incomplete)
(\end occurred when \ifx on line 45 was incomplete)
(\end occurred when \ifx on line 34 was incomplete)
(\end occurred when \ifx on line 34 was incomplete)
(\end occurred when \ifx on line 24 was incomplete)
(\end occurred when \ifx on line 7 was incomplete)
(\end occurred when \ifx on line 6 was incomplete)
(\end occurred when \ifx on line 5 was incomplete)
(\end occurred when \ifx on line 202 was incomplete)
(\end occurred when \ifx on line 186 was incomplete)
(\end occurred when \ifx on line 186 was incomplete)
(\end occurred when \ifx on line 186 was incomplete)
(\end occurred when \ifx on line 186 was incomplete)
(\end occurred when \ifx on line 124 was incomplete)
(\end occurred when \ifx on line 124 was incomplete)
(\end occurred when \ifx on line 123 was incomplete)
(\end occurred when \ifx on line 123 was incomplete)
(\end occurred when \ifx on line 121 was incomplete)
(\end occurred when \ifx on line 120 was incomplete)
(\end occurred when \ifx on line 117 was incomplete)
(\end occurred when \ifx on line 39 was incomplete)
(\end occurred when \ifx on line 2 was incomplete)
(\end occurred when \ifx on line 410 was incomplete)
(\end occurred when \ifx on line 410 was incomplete)
(\end occurred when \ifx on line 345 was incomplete)
(\end occurred when \ifx on line 345 was incomplete)
(\end occurred when \ifx on line 345 was incomplete)
(\end occurred when \ifx on line 344 was incomplete)
(\end occurred when \ifx on line 340 was incomplete)
(\end occurred when \ifx on line 339 was incomplete)
(\end occurred when \ifx on line 308 was incomplete)
(\end occurred when \ifx on line 308 was incomplete)
(\end occurred when \ifx on line 300 was incomplete)
(\end occurred when \ifx on line 300 was incomplete)
(\end occurred when \ifx on line 295 was incomplete)
(\end occurred when \ifx on line 294 was incomplete)
(\end occurred when \ifx on line 253 was incomplete)
(\end occurred when \ifx on line 253 was incomplete)
(\end occurred when \ifx on line 244 was incomplete)
(\end occurred when \ifx on line 243 was incomplete)
(\end occurred when \ifx on line 242 was incomplete)
(\end occurred when \ifx on line 242 was incomplete)
(\end occurred when \ifx on line 229 was incomplete)
(\end occurred when \ifx on line 225 was incomplete)
(\end occurred when \ifx on line 166 was incomplete)
(\end occurred when \ifx on line 165 was incomplete)
(\end occurred when \ifx on line 122 was incomplete)
(\end occurred when \ifx on line 121 was incomplete)
(\end occurred when \ifx on line 100 was incomplete)
(\end occurred when \ifx on line 68 was incomplete)
(\end occurred when \ifx on line 65 was incomplete)
(\end occurred when \ifx on line 44 was incomplete)
(\end occurred when \ifx on line 43 was incomplete)
(\end occurred when \ifx on line 14 was incomplete)
(\end occurred when \ifx on line 6 was incomplete)
(\end occurred when \ifx on line 4 was incomplete)
(\end occurred when \ifx on line 8 was incomplete)
(\end occurred when \ifx on line 86 was incomplete)
(\end occurred when \ifx on line 84 was incomplete)
(\end occurred when \ifx on line 84 was incomplete)
(\end occurred when \ifx on line 84 was incomplete)
(\end occurred when \ifx on line 81 was incomplete)
(\end occurred when \ifx on line 79 was incomplete)
(\end occurred when \ifx on line 26 was incomplete)
(\end occurred when \ifx on line 1 was incomplete)
(\end occurred when \ifx on line 97 was incomplete)
(\end occurred when \ifx on line 97 was incomplete)
(\end occurred when \ifx on line 97 was incomplete)
(\end occurred when \ifx on line 86 was incomplete)
(\end occurred when \ifx on line 80 was incomplete)
(\end occurred when \ifx on line 77 was incomplete)
(\end occurred when \ifx on line 75 was incomplete)
(\end occurred when \ifx on line 73 was incomplete)
(\end occurred when \ifx on line 71 was incomplete)
(\end occurred when \ifx on line 63 was incomplete)
(\end occurred when \ifx on line 61 was incomplete)
(\end occurred when \ifx on line 59 was incomplete)
(\end occurred when \ifx on line 28 was incomplete)
(\end occurred when \ifx on line 27 was incomplete)
(\end occurred when \ifx on line 5 was incomplete)
(\end occurred when \ifx on line 5 was incomplete)
(\end occurred when \ifx on line 1 was incomplete)
(\end occurred when \iftrue on line 95 was incomplete)
(\end occurred when \ifnum on line 95 was incomplete)
(\end occurred when \ifx on line 1104 was incomplete)
(\end occurred when \ifx on line 1104 was incomplete)
(\end occurred when \ifx on line 1103 was incomplete)
(\end occurred when \ifx on line 1101 was incomplete)
(\end occurred when \ifx on line 1099 was incomplete)
(\end occurred when \ifx on line 1095 was incomplete)
(\end occurred when \ifx on line 1095 was incomplete)
(\end occurred when \ifx on line 1061 was incomplete)
(\end occurred when \ifx on line 1061 was incomplete)
(\end occurred when \ifx on line 1015 was incomplete)
(\end occurred when \ifx on line 1015 was incomplete)
(\end occurred when \ifx on line 981 was incomplete)
(\end occurred when \ifx on line 981 was incomplete)
(\end occurred when \ifx on line 937 was incomplete)
(\end occurred when \ifx on line 937 was incomplete)
(\end occurred when \ifx on line 912 was incomplete)
(\end occurred when \ifx on line 888 was incomplete)
(\end occurred when \ifx on line 887 was incomplete)
(\end occurred when \ifx on line 887 was incomplete)
(\end occurred when \ifx on line 886 was incomplete)
(\end occurred when \ifx on line 856 was incomplete)
(\end occurred when \ifx on line 851 was incomplete)
(\end occurred when \ifx on line 851 was incomplete)
(\end occurred when \ifx on line 839 was incomplete)
(\end occurred when \ifx on line 806 was incomplete)
(\end occurred when \ifx on line 776 was incomplete)
(\end occurred when \ifx on line 742 was incomplete)
(\end occurred when \ifx on line 739 was incomplete)
(\end occurred when \ifx on line 716 was incomplete)
(\end occurred when \ifx on line 676 was incomplete)
(\end occurred when \ifx on line 674 was incomplete)
(\end occurred when \ifx on line 671 was incomplete)
(\end occurred when \ifx on line 641 was incomplete)
(\end occurred when \ifx on line 638 was incomplete)
(\end occurred when \ifx on line 587 was incomplete)
(\end occurred when \ifx on line 586 was incomplete)
(\end occurred when \ifx on line 584 was incomplete)
(\end occurred when \ifx on line 584 was incomplete)
(\end occurred when \ifx on line 489 was incomplete)
(\end occurred when \ifx on line 410 was incomplete)
(\end occurred when \ifx on line 410 was incomplete)
(\end occurred when \ifx on line 359 was incomplete)
(\end occurred when \ifx on line 359 was incomplete)
(\end occurred when \ifx on line 316 was incomplete)
(\end occurred when \ifx on line 316 was incomplete)
(\end occurred when \ifx on line 277 was incomplete)
(\end occurred when \ifx on line 277 was incomplete)
(\end occurred when \ifx on line 139 was incomplete)
(\end occurred when \ifx on line 134 was incomplete)
(\end occurred when \ifx on line 134 was incomplete)
(\end occurred when \ifx on line 130 was incomplete)
(\end occurred when \ifx on line 122 was incomplete)
(\end occurred when \ifx on line 114 was incomplete)
(\end occurred when \ifx on line 100 was incomplete)
(\end occurred when \ifx on line 95 was incomplete)
(\end occurred when \ifx on line 89 was incomplete)
(\end occurred when \ifx on line 86 was incomplete)
(\end occurred when \ifx on line 82 was incomplete)
(\end occurred when \ifx on line 47 was incomplete)
(\end occurred when \ifx on line 45 was incomplete)
(\end occurred when \ifx on line 14 was incomplete)
(\end occurred when \ifx on line 14 was incomplete)
(\end occurred when \ifx on line 14 was incomplete)
(\end occurred when \ifx on line 14 was incomplete)
(\end occurred when \ifx on line 130 was incomplete)
(\end occurred when \ifx on line 107 was incomplete)
(\end occurred when \ifx on line 106 was incomplete)
(\end occurred when \ifx on line 72 was incomplete)
(\end occurred when \ifx on line 3 was incomplete)
(\end occurred when \iftrue on line 94 was incomplete)
(\end occurred when \ifnum on line 94 was incomplete)
(\end occurred when \ifx on line 2 was incomplete)
(\end occurred when \ifx on line 40 was incomplete)
(\end occurred when \ifx on line 22 was incomplete)
(\end occurred when \ifx on line 6 was incomplete)
(\end occurred when \ifx on line 2 was incomplete)
(\end occurred when \ifx on line 51 was incomplete)
(\end occurred when \ifx on line 48 was incomplete)
(\end occurred when \ifx on line 33 was incomplete)
(\end occurred when \ifx on line 3 was incomplete)
(\end occurred when \ifx on line 20 was incomplete)
(\end occurred when \ifx on line 110 was incomplete)
(\end occurred when \ifx on line 110 was incomplete)
(\end occurred when \ifx on line 92 was incomplete)
(\end occurred when \ifx on line 77 was incomplete)
(\end occurred when \ifx on line 57 was incomplete)
(\end occurred when \ifx on line 47 was incomplete)
(\end occurred when \ifx on line 26 was incomplete)
(\end occurred when \ifx on line 25 was incomplete)
(\end occurred when \ifx on line 11 was incomplete)
(\end occurred when \ifx on line 3 was incomplete)
(\end occurred when \iftrue on line 93 was incomplete)
(\end occurred when \ifnum on line 93 was incomplete)
(\end occurred when \ifx on line 21 was incomplete)
(\end occurred when \ifx on line 21 was incomplete)
(\end occurred when \ifx on line 14 was incomplete)
(\end occurred when \ifx on line 37 was incomplete)
(\end occurred when \ifx on line 28 was incomplete)
(\end occurred when \ifx on line 12 was incomplete)
(\end occurred when \ifx on line 54 was incomplete)
(\end occurred when \ifx on line 47 was incomplete)
(\end occurred when \ifx on line 32 was incomplete)
(\end occurred when \ifx on line 8 was incomplete)
(\end occurred when \iftrue on line 92 was incomplete)
(\end occurred when \ifnum on line 92 was incomplete)
(\end occurred when \ifx on line 14 was incomplete)
(\end occurred when \ifx on line 13 was incomplete)
(\end occurred when \iftrue on line 91 was incomplete)
(\end occurred when \ifnum on line 91 was incomplete)
(\end occurred when \ifx on line 103 was incomplete) 
Here is how much of TeX's memory you used:
 34862 strings out of 478995
 570666 string characters out of 5858210
 1287075 words of memory out of 5000000
 51152 multiletter control sequences out of 15000+600000
 422204 words of font info for 95 fonts, out of 8000000 for 9000
 1141 hyphenation exceptions out of 8191
 113i,10n,141p,1790b,3038s stack positions out of 5000i,500n,10000p,200000b,80000s

Output written on thesis.dvi (421 pages, 952012 bytes).
